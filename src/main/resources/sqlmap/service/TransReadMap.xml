<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="TransSearchRead">
    <typeAlias alias="DataModel" type="mobile.DataModel"/>
    
    <!-- Select with no parameters using the result map for Account class. -->
    <select id="TransTotalSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", fn_nm_code1('svc_cd', a.svc_cd) as "svc_nm", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.svc_prdt_nm as "svc_prdt_nm", a.input_cl as "input_cl",
               case when a.svc_cd = '01' then 
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '전취소'
                           when a.state_cd = '2' then '후취소' 
                           else '' end
                    when a.svc_cd = '02' then
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           when a.state_cd = '2' then '환불' 
                           else '' end
                    when a.svc_cd = '03' then
                      case when a.state_cd = '0' then '입금'
                             when a.state_cd = '1' then '취소'
                           when a.state_cd = '2' then '환불'
                           when a.state_cd = '3' then '요청'
                           else '' end
                    when a.svc_cd in ('05', '06') then
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           else '' end
                    when a.svc_cd = '07' then 
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           else '' end      
                    end as "state_nm", 
               a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, substr(a.tid, 21, 6) as app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd, '' input_cl,
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, moid
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, substr(a.tid, 21, 6) as app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd, '' input_cl,
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, moid
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_dt desc, a.app_tm desc
    </select>

    <select id="TransTotalSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", fn_nm_code1('svc_cd', a.svc_cd) as "svc_nm", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.svc_prdt_nm as "svc_prdt_nm", a.input_cl as "input_cl",
               case when a.svc_cd in ('01','07','08','09') then 
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '전취소'
                           when a.state_cd = '2' then '후취소' 
                           else '' end
                    when a.svc_cd = '02' then
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           when a.state_cd = '2' then '환불' 
                           else '' end
                    when a.svc_cd = '03' then
                      case when a.state_cd = '0' then '입금'
                             when a.state_cd = '1' then '취소'
                           when a.state_cd = '2' then '환불'
                           when a.state_cd = '3' then '요청'
                           else '' end
                    when a.svc_cd in ('05', '06') then
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           else '' end
                    when a.svc_cd = '07' then 
                      case when a.state_cd = '0' then '승인'
                           when a.state_cd = '1' then '취소'
                           else '' end          
                    end as "state_nm",
              a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, substr(a.tid, 21, 6) as app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd, '' input_cl,
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, moid
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, substr(a.tid, 21, 6) as app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd, '' input_cl,
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, moid
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_dt desc, a.app_tm desc
    </select>

    <select id="TransTotalSearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union all
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                  0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            ) a
    </select>

    <select id="TransTotalSearchCnt2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union all
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                  0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a
    </select>
    
    <select id="TransTotalTotSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
               sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union all
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_trans_history a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
            ) a
            group by a.tr_dt
    </select>

    <select id="TransTotalTotSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
               sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union all
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_trans_history a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
        ) a
        group by a.tr_dt
        order by tr_dt
    </select>

    <!-- Select with no parameters using the result map for Account class. -->
    <select id="TransCardSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt",a.app_tm as "app_tm",
                a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.instmnt_mon as "instmnt_mon", a.app_no as "app_no", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_no as "fn_no", a.auth_type as "auth_type", a.moid as "moid", a.trans_type as "trans_type", a.acqu_co as "acqu_co",
               a.acqu_dt as "acqu_dt", a.acqu_status as "acqu_status"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.cc_tm,a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                         a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                         case when b.cc_acqu_dt is not null then b.cc_acqu_dt 
                    when b.app_acqu_dt is not null then b.app_acqu_dt
                    else '' end  acqu_dt,
                 case when b.cc_acqu_dt is not null then '취소매입' 
                    when b.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null</isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            AND a.tid = b.tid
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.cc_tm, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                         a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                          case when d.cc_acqu_dt is not null then d.cc_acqu_dt 
                    when d.app_acqu_dt is not null then d.app_acqu_dt
                    else '' end  acqu_dt,
                 case when d.cc_acqu_dt is not null then '취소매입' 
                    when d.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
            from tb_card_trans a, tb_trans_history d
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> d.app_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> d.cc_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> .app_acqu_dt is null and d.cc_acqu_dt is null</isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2') and a.tid = d.tid
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_dt desc, a.app_tm desc
    </select>
    
    <select id="TransCardSearch3" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt",a.app_tm as "app_tm",
                a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.instmnt_mon as "instmnt_mon", a.app_no as "app_no", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_no as "fn_no", a.auth_type as "auth_type", a.moid as "moid", a.trans_type as "trans_type", a.acqu_co as "acqu_co",
               a.acqu_dt as "acqu_dt", a.acqu_status as "acqu_status"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.cc_tm,a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd, 
                         a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                         a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                         case when b.cc_acqu_dt is not null then b.cc_acqu_dt 
                    when b.app_acqu_dt is not null then b.app_acqu_dt
                    else '' end  acqu_dt,
                 case when b.cc_acqu_dt is not null then '취소매입' 
                    when b.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt  between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null</isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            AND a.tid = b.tid
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.cc_tm, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                         a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                         case when d.cc_acqu_dt is not null then d.cc_acqu_dt 
                    when d.app_acqu_dt is not null then d.app_acqu_dt
                    else '' end  acqu_dt,
                 case when d.cc_acqu_dt is not null then '취소매입' 
                    when d.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
            from tb_card_trans a, tb_trans_history d
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq">   d.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR#</isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> d.app_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> d.cc_acqu_dt is not null</isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> d.app_acqu_dt is null and d.cc_acqu_dt is null</isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
             and a.tid = d.tid
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.acqu_dt desc
    </select>

    <select id="TransCardSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
            select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.instmnt_mon as "instmnt_mon", a.app_no as "app_no", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_no as "fn_no", a.auth_type as "auth_type", a.moid as "moid", a.trans_type as "trans_type", a.acqu_co as "acqu_co",
               a.app_tm as "app_tm", a.cc_tm as "cc_tm", a.acqu_dt as "acqu_dt", a.acqu_status as "acqu_status"
            from (
            <![CDATA[
                select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                             a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                             a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                             a.cc_tm, a.app_tm, 
                         case when b.cc_acqu_dt is not null then b.cc_acqu_dt 
                    when b.app_acqu_dt is not null then b.app_acqu_dt
                    else '' end  acqu_dt,
                 case when b.cc_acqu_dt is not null then '취소매입' 
                    when b.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
                from tb_card_trans a, tb_trans_history b
            ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
                union
            <![CDATA[
                select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                             a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                             a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                              a.cc_tm, a.app_tm, 
                         case when d.cc_acqu_dt is not null then d.cc_acqu_dt 
                    when d.app_acqu_dt is not null then d.app_acqu_dt
                    else '' end  acqu_dt,
                 case when d.cc_acqu_dt is not null then '취소매입' 
                    when d.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
                from tb_card_trans a, tb_trans_history d
            ]]>
                where a.mid = #mid:VARCHAR#
                <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> d.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> d.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> d.app_acqu_dt is null and d.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
                and a.state_cd in ('1', '2') and a.tid = d.tid
            ) a left outer join tb_merchant b on b.mid = a.mid
            order by a.app_dt desc, a.app_tm desc
    </select>
    
    <select id="TransCardSearch4" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
            select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.instmnt_mon as "instmnt_mon", a.app_no as "app_no", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_no as "fn_no", a.auth_type as "auth_type", a.moid as "moid", a.trans_type as "trans_type", a.acqu_co as "acqu_co",
               a.app_tm as "app_tm", a.cc_tm as "cc_tm", a.acqu_dt as "acqu_dt", a.acqu_status as "acqu_status"
            from (
            <![CDATA[
                select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                             a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                             a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                             a.cc_tm, a.app_tm, 
                        case when b.cc_acqu_dt is not null then b.cc_acqu_dt 
                    when b.app_acqu_dt is not null then b.app_acqu_dt
                    else '' end  acqu_dt,
                 case when b.cc_acqu_dt is not null then '취소매입' 
                    when b.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
                from tb_card_trans a, tb_trans_history b
            ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
                union
            <![CDATA[
                select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                             a.instmnt_mon, a.app_no, fn_nm_code1('card_cd', a.app_co) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm,
                             a.fn_no, fn_nm_code1('auth_type', a.auth_type) as auth_type, a.moid, a.trans_type, fn_nm_code1('card_cd', a.acqu_co) acqu_co,
                              a.cc_tm, a.app_tm, 
                        case when d.cc_acqu_dt is not null then d.cc_acqu_dt 
                    when d.app_acqu_dt is not null then d.app_acqu_dt
                    else '' end  acqu_dt,
                 case when d.cc_acqu_dt is not null then '취소매입' 
                    when d.app_acqu_dt is not null then '승인매입'
                    else '미매입' end  acqu_status
                from tb_card_trans a, tb_trans_history d
            ]]>
                where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> d.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> d.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> d.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> d.app_acqu_dt is null and d.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
                 and a.tid = d.tid
            ) a left outer join tb_merchant b on b.mid = a.mid
            order by a.acqu_dt desc
    </select>

    <select id="TransCardSearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.bf_cc_cnt) as "bfCcCnt",
                     sum(a.bf_cc_amt) as "bfCcAmt",
           sum(a.af_cc_cnt) as "afCcCnt",
           sum(a.af_cc_amt) as "afCcAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt 
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
        union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (a.app_dt < #frDt:VARCHAR# or a.app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, 
                   sum(case when a.state_cd = '1' then 1 else 0 end) bf_cc_cnt, 
             sum(case when a.state_cd = '1' then a.goods_amt else 0 end) bf_cc_amt,
             sum(case when a.state_cd = '2' then 1 else 0 end) af_cc_cnt, 
             sum(case when a.state_cd = '2' then a.goods_amt else 0 end) af_cc_amt
            from tb_card_trans a, tb_trans_history d
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> d.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> d.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> d.app_acqu_dt is null and d.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = d.tid
            and a.state_cd in ('1', '2')
            ) a
    </select>
    
    <select id="TransCardSearchCnt3" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.bf_cc_cnt) as "bfCcCnt",
                     sum(a.bf_cc_amt) as "bfCcAmt",
           sum(a.af_cc_cnt) as "afCcCnt",
           sum(a.af_cc_amt) as "afCcAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt 
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
            </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> <![CDATA[ b.app_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> <![CDATA[ b.cc_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> <![CDATA[ b.app_acqu_dt is null and b.cc_acqu_dt is null ]]> </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR# </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
        union all
        <![CDATA[
            select sum(case when (b.app_acqu_dt < #frDt:VARCHAR# or b.app_acqu_dt > #toDt:VARCHAR#) then 1  else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, 
                   0 bf_cc_cnt, 
             0 bf_cc_amt,
             count(1) af_cc_cnt, 
             sum(a.goods_amt) af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> <![CDATA[ b.app_acqu_dt is not null ]]> </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> <![CDATA[ b.cc_acqu_dt is not null ]]> </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> <![CDATA[ b.app_acqu_dt is null and b.cc_acqu_dt is null ]]> </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
             and a.tid = b.tid
            ) a
    </select>

    <select id="TransCardSearchCnt4" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.bf_cc_cnt) as "bfCcCnt",
                     sum(a.bf_cc_amt) as "bfCcAmt",
           sum(a.af_cc_cnt) as "afCcCnt",
           sum(a.af_cc_amt) as "afCcAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt 
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
        
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> <![CDATA[ b.app_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> <![CDATA[ b.cc_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> <![CDATA[ b.app_acqu_dt is null and b.cc_acqu_dt is null  ]]></isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
            union all
        <![CDATA[
            select sum(case when (b.app_acqu_dt < #frDt:VARCHAR# or b.app_acqu_dt > #toDt:VARCHAR#) then 1  else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, 
                   0 bf_cc_cnt, 
             0 bf_cc_amt,
             count(1) af_cc_cnt, 
             sum(a.goods_amt) af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> <![CDATA[b.app_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> <![CDATA[b.cc_acqu_dt is not null  ]]></isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> <![CDATA[b.app_acqu_dt is null and b.cc_acqu_dt is null  ]]></isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
             and a.tid = b.tid
        ) a
    </select>
    
    <select id="TransCardSearchCnt2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.bf_cc_cnt) as "bfCcCnt",
                     sum(a.bf_cc_amt) as "bfCcAmt",
           sum(a.af_cc_cnt) as "afCcCnt",
           sum(a.af_cc_amt) as "afCcAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt 
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null</isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.tid = b.tid
            union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (a.app_dt < #frDt:VARCHAR# or a.app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, 
                   sum(case when a.state_cd = '1' then 1 else 0 end) bf_cc_cnt, 
             sum(case when a.state_cd = '1' then a.goods_amt else 0 end) bf_cc_amt,
             sum(case when a.state_cd = '2' then 1 else 0 end) af_cc_cnt, 
             sum(case when a.state_cd = '2' then a.goods_amt else 0 end) af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isEqual prepend="AND" property="state" compareValue="0"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="1"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="2"> a.state_cd = #state:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="state" compareValue="4"> b.app_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="5"> b.cc_acqu_dt is not null </isEqual>
            <isEqual prepend="AND" property="state" compareValue="6"> b.app_acqu_dt is null and b.cc_acqu_dt is null </isEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2') and a.tid = b.tid
        ) a
    </select>
    
    <select id="TransCardTotSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.bf_cc_cnt) as "bf_cc_cnt",
                     sum(a.bf_cc_amt) as "bf_cc_amt",
                     sum(a.af_cc_cnt) as "af_cc_cnt",
                     sum(a.af_cc_amt) as "af_cc_amt",
                     sum(a.app_cnt - a.bf_cc_cnt - a.af_cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.bf_cc_amt - a.af_cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt
            from tb_card_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
        union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, 
                   sum(case when a.state_cd = '1' then 1 else 0 end) bf_cc_cnt, 
             sum(case when a.state_cd = '1' then a.goods_amt else 0 end) bf_cc_amt,
             sum(case when a.state_cd = '2' then 1 else 0 end) af_cc_cnt, 
             sum(case when a.state_cd = '2' then a.goods_amt else 0 end) af_cc_amt
            from tb_card_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
            ) a
            group by tr_dt
    </select>
    
    <select id="TransCardTotSearch3" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.bf_cc_cnt) as "bf_cc_cnt",
                     sum(a.bf_cc_amt) as "bf_cc_amt",
                     sum(a.af_cc_cnt) as "af_cc_cnt",
                     sum(a.af_cc_amt) as "af_cc_amt",
                     sum(a.app_cnt - a.bf_cc_cnt - a.af_cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.bf_cc_amt - a.af_cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select b.app_acqu_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            and a.tid = b.tid
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by b.app_acqu_dt
        union
        <![CDATA[
            select b.cc_acqu_dt as tr_dt, 0 app_cnt, 0 app_amt, 
                   0 bf_cc_cnt, 
             0 bf_cc_amt,
             count(1) af_cc_cnt, 
             sum(a.goods_amt) af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            and a.tid = b.tid
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
            ) a
            group by tr_dt
    </select>

    <select id="TransCardTotSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.bf_cc_cnt) as "bf_cc_cnt",
                     sum(a.bf_cc_amt) as "bf_cc_amt",
                     sum(a.af_cc_cnt) as "af_cc_cnt",
                     sum(a.af_cc_amt) as "af_cc_amt",
                     sum(a.app_cnt - a.bf_cc_cnt - a.af_cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.bf_cc_amt - a.af_cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt
            from tb_card_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, 
                   sum(case when a.state_cd = '1' then 1 else 0 end) bf_cc_cnt, 
             sum(case when a.state_cd = '1' then a.goods_amt else 0 end) bf_cc_amt,
             sum(case when a.state_cd = '2' then 1 else 0 end) af_cc_cnt, 
             sum(case when a.state_cd = '2' then a.goods_amt else 0 end) af_cc_amt
            from tb_card_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
        ) a
        group by a.tr_dt
        order by tr_dt desc 
    </select>
    
    <select id="TransCardTotSearch4" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.bf_cc_cnt) as "bf_cc_cnt",
                     sum(a.bf_cc_amt) as "bf_cc_amt",
                     sum(a.af_cc_cnt) as "af_cc_cnt",
                     sum(a.af_cc_amt) as "af_cc_amt",
                     sum(a.app_cnt - a.bf_cc_cnt - a.af_cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.bf_cc_amt - a.af_cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select b.app_acqu_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 bf_cc_cnt, 0 bf_cc_amt, 0 af_cc_cnt, 0 af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
        and a.tid = b.tid 
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.app_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by b.app_acqu_dt
            union
        <![CDATA[
            select b.cc_acqu_dt as tr_dt, 0 app_cnt, 0 app_amt, 
                 0 bf_cc_cnt, 
             0 bf_cc_amt,
             count(1) af_cc_cnt, 
             sum(a.goods_amt) af_cc_amt
            from tb_card_trans a, tb_trans_history b
        ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.app_co = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
        and a.tid = b.tid 
            <isEqual prepend="AND" property="selDt" compareValue="acq"> b.cc_acqu_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="cardNo" compareValue=""> <![CDATA[ a.card_no = case when a.auth_type = '02' then concat(substr(#cardNo:VARCHAR#,1,8), '0000', substr(#cardNo:VARCHAR#, 13, 4)) else #cardNo:VARCHAR# end ]]> </isNotEqual>
            <isNotEqual prepend="AND" property="appNo" compareValue=""> a.app_no = #appNo:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by b.cc_acqu_dt
        ) a
        group by a.tr_dt
        order by tr_dt desc
    </select>

    <select id="TransBankSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_id as "fn_no", a.moid as "moid", a.trans_type as "trans_type"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.fn_id, a.moid, a.trans_type
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.fn_id, a.moid, a.trans_type
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_dt desc, a.app_tm desc
    </select>

    <select id="TransBankSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.tid as "tid", a.goods_nm as "goods_nm", 
               a.goods_amt as "goods_amt", a.ord_nm as "ord_nm", a.state_cd as "state_cd", a.fn_nm as "fn_nm", a.svc_prdt_nm as "svc_prdt_nm",
               a.fn_id as "fn_no", a.moid as "moid", a.trans_type as "trans_type"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.fn_id, a.moid, a.trans_type
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_dt, a.app_tm, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.ord_nm, a.state_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.fn_id, a.moid, a.trans_type
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_dt desc, a.app_tm desc
    </select>

    <select id="TransBankSearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    <![CDATA[
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a
    </select>

    <select id="TransBankSearchCnt2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    <![CDATA[
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
        ) a
    </select>
    
    <select id="TransBankTotSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    <![CDATA[
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_bank_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
        ) a
        group by a.tr_dt
    </select>

    <select id="TransBankTotSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    <![CDATA[
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_bank_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="acctNo" compareValue=""> a.accnt_no = lpad(substr(#acctNo:VARCHAR#, length(#acctNo:VARCHAR#)-4, length(#acctNo:VARCHAR#)), length(a.accnt_no), '*') </isNotEqual>
            <isNotEqual prepend="AND" property="socNo" compareValue=""> a.ord_soc_no = lpad(substr(#socNo:VARCHAR#, case when length(#socNo:VARCHAR#) = 13 then 7 else 6 end, length(#socNo:VARCHAR#)), length(a.ord_soc_no), '*') </isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd in ('1', '2')
            group by cc_dt
        ) a
        group by a.tr_dt
    </select>
    
    
    <select id="TransVacctSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_req_dt as "app_req_dt", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.bank_cd as "bank_cd", a.fn_nm as "fn_nm", a.vacct_no as "vacct_no", a.ord_nm as "ord_nm", 
               a.input_due_dt as "input_due_dt", a.input_acct_nm as "input_acct_nm", a.input_cl as "input_cl", a.svc_prdt_nm as "svc_prdt_nm", a.state_cd as "state_cd",
               a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_req_dt desc, a.app_req_tm desc
    </select>
    
    
    <select id="TransVacctSearch3" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_req_dt as "app_req_dt", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.bank_cd as "bank_cd", a.fn_nm as "fn_nm", a.vacct_no as "vacct_no", a.ord_nm as "ord_nm", 
               a.input_due_dt as "input_due_dt", a.input_acct_nm as "input_acct_nm", a.input_cl as "input_cl", a.svc_prdt_nm as "svc_prdt_nm", a.state_cd as "state_cd",
               a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
            </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="req"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_req_dt desc, a.app_req_tm desc
    </select>
    
    <select id="TransVacctSearch2" parameterClass="DataModel" resultClass="DataModel">
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_req_dt as "app_req_dt", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.bank_cd as "bank_cd", a.fn_nm as "fn_nm", a.vacct_no as "vacct_no", a.ord_nm as "ord_nm", 
               a.input_due_dt as "input_due_dt", a.input_acct_nm as "input_acct_nm", a.input_cl as "input_cl", a.svc_prdt_nm as "svc_prdt_nm", a.state_cd as "state_cd",
               a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_req_dt desc, a.app_req_tm desc
    </select>
    
    <select id="TransVacctSearch4" parameterClass="DataModel" resultClass="DataModel">
        select b.co_nm as "co_nm", a.mid as "mid", a.svc_cd as "svc_cd", a.svc_prdt_cd as "svc_prdt_cd", a.app_req_dt as "app_req_dt", a.app_dt as "app_dt", a.cc_dt as "cc_dt", 
               a.tid as "tid", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.bank_cd as "bank_cd", a.fn_nm as "fn_nm", a.vacct_no as "vacct_no", a.ord_nm as "ord_nm", 
               a.input_due_dt as "input_due_dt", a.input_acct_nm as "input_acct_nm", a.input_cl as "input_cl", a.svc_prdt_nm as "svc_prdt_nm", a.state_cd as "state_cd",
               a.moid as "moid"
        from (
        <![CDATA[
            select a.mid, a.svc_cd, a.svc_prdt_cd, a.app_req_dt, a.app_req_tm, a.app_dt, a.cc_dt, a.tid, a.goods_nm, a.goods_amt, a.bank_cd,
                         fn_nm_code1('bank_cd', a.bank_cd) fn_nm, a.vacct_no, a.ord_nm, a.input_due_dt, a.input_acct_nm, a.input_cl, 
                         fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) svc_prdt_nm, a.state_cd, moid
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="req"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
        ) a left outer join tb_merchant b on b.mid = a.mid
        order by a.app_req_dt desc, a.app_req_tm desc
    </select>
    

  <select id="TransVacctSearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
        ) a
    </select>
    
    <select id="TransVacctSearchCnt3" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
            select 
            count(1) as "totPageCnt", sum(case when a.state_cd = '0' then 1 else 0 end) as "appCnt", sum(case when a.state_cd = '0' then a.goods_amt else 0 end) as "appAmt", 
            sum(case when a.state_cd = '2' then 1 else 0 end) as "ccCnt", sum(case when a.state_cd = '2' then a.goods_amt else 0 end) as "ccAmt",
            sum(case when a.state_cd = '3' then 1 else 0 end) as "reqCnt", sum(case when a.state_cd = '3' then a.goods_amt else 0 end) as "reqAmt"
            from tb_vacct_trans a
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
            </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="req"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
    </select>
    
    <select id="TransVacctSearchCnt2" parameterClass="DataModel" resultClass="DataModel">
        select sum(rowCnt) as "totPageCnt",
               sum(a.app_cnt) as "appCnt",
                     sum(a.app_amt) as "appAmt",
                     sum(a.cc_cnt) as "ccCnt",
                     sum(a.cc_amt) as "ccAmt"
        from (
        <![CDATA[
            select count(1) rowCnt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
        union
        <![CDATA[
            select sum(case when 'cc' != #selDt:VARCHAR# and (app_dt < #frDt:VARCHAR# or app_dt > #toDt:VARCHAR#) then 1 when 'cc' = #selDt:VARCHAR# then 1 else 0 end) rowCnt,
                   0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
        ) a
    </select>
    
    <select id="TransVacctSearchCnt4" parameterClass="DataModel" resultClass="DataModel">
            select 
            count(1) as "totPageCnt", sum(case when a.state_cd = '0' then 1 else 0 end) as "appCnt", sum(case when a.state_cd = '0' then a.goods_amt else 0 end) as "appAmt", 
            sum(case when a.state_cd = '2' then 1 else 0 end) as "ccCnt", sum(case when a.state_cd = '2' then a.goods_amt else 0 end) as "ccAmt",
            sum(case when a.state_cd = '3' then 1 else 0 end) as "reqCnt", sum(case when a.state_cd = '3' then a.goods_amt else 0 end) as "reqAmt"
            from tb_vacct_trans a
            where a.mid = #mid:VARCHAR#
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isEqual prepend="AND" property="selDt" compareValue="req"> a.app_req_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
    </select>
    
    <select id="TransVacctTotSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
            union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_vacct_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
            group by cc_dt
        ) a
        group by a.tr_dt
    </select>
    
    <select id="TransVacctTotSearch2" parameterClass="DataModel" resultClass="DataModel">
        select a.tr_dt as "tr_dt",
               sum(a.app_cnt) as "app_cnt",
                     sum(a.app_amt) as "app_amt",
                     sum(a.cc_cnt) as "cc_cnt",
                     sum(a.cc_amt) as "cc_amt",
                     sum(a.app_cnt - a.cc_cnt) as "tot_cnt",
                     sum(a.app_amt - a.cc_amt) as "tot_amt"
        from (
        <![CDATA[
            select app_dt as tr_dt, count(1) app_cnt, sum(a.goods_amt) app_amt, 0 cc_cnt, 0 cc_amt
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="cc"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="cc"> a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            group by app_dt
        union
        <![CDATA[
            select cc_dt as tr_dt, 0 app_cnt, 0 app_amt, count(1) cc_cnt, sum(a.goods_amt) cc_amt
            from tb_vacct_trans a
        ]]>
            where a.mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="app"> 1 = 2 </isEqual>
            <isNotNull property="fnCd">
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> a.bank_cd = #fnCd:VARCHAR# </isNotEqual>
        </isNotNull>
            <isNotEqual prepend="AND" property="selDt" compareValue="app"> a.cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="state" compareValue="all"> a.state_cd = #state:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="inputAcctNm" compareValue=""> a.input_acct_nm = #inputAcctNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            and a.state_cd = '2'
            group by cc_dt
        ) a
        group by a.tr_dt
    </select>
    
    
    <select id="serDetailTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
        SELECT a.tid as "tid", a.moid as "moid", a.app_dt as "app_dt", b.app_tm as "app_tm", a.svc_cd as "svc_cd", 
               fn_nm_code1('svc_cd', a.svc_cd) as "svc_nm", a.svc_prdt_cd as "svc_prdt_cd", fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm",
                   a.mid as "mid", a.gid as "gid", a.aid as "aid", a.state_cd as "state_cd", a.goods_amt as "goods_amt", a.cc_dt as "cc_dt", b.cc_tm as "cc_tm", 
                   a.fn_cd as "fn_cd", a.goods_nm as "goods_nm", a.ord_nm as "ord_nm", c.instmnt_mon as "instmnt_mon",
                        case when a.state_cd = '0' then '승인'
                                 when a.state_cd = '1' then '전취소'
                                 when a.state_cd = '2' then '후취소'
                                 when a.state_cd = '3' then '입금요청'
                                 else '' end as "state_nm",
                   d.identity as "identity",
                   d.app_no as "app_no"
            from tb_trans_history a
            left outer join tb_trans b on a.tid = b.tid
            left outer join tb_card_trans c on a.tid = c.tid
            left outer join tb_rcpt_trans d on a.tid = d.tid
        ]]>
            where a.tid = #TID:VARCHAR#
    </select>

    <select id="serDetailCardTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    	<![CDATA[
      	select a.svc_cd as "svc_cd", a.app_co as "app_co", a.svc_prdt_cd as "svc_prdt_cd", a.trans_type as "trans_type", 
             fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as"gid", a.aid as "aid",
             a.app_dt as "app_dt", a.app_tm as "app_tm", b.app_acqu_dt as "app_acqu_dt", b.app_ret_dt as "app_ret_dt", ifnull(b.app_ret_cnt, 0) as "app_ret_cnt", 
             b.app_rea_dt as "app_rea_dt", ifnull(b.app_rea_cnt, 0) as "app_rea_cnt", b.app_settlmnt_dt as "app_settlmnt_dt", fn_nm_code1('van_cd', b.app_van) as "app_van",
             a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", b.cc_acqu_dt as "cc_acqu_dt", b.cc_ret_dt as "cc_ret_dt", ifnull(b.cc_ret_cnt, 0) as "cc_ret_cnt", b.cc_rea_dt as "cc_rea_dt", 
             ifnull(b.cc_rea_cnt, 0) as "cc_rea_cnt", b.cc_settlmnt_dt as "cc_settlmnt_dt", fn_nm_code1('van_cd', b.acqu_van) as "acqu_van",
             fn_nm_code1('card_cd', a.app_co) as "card_nm", fn_mask_cardno(a.card_no) as "card_no", a.fn_no as "fn_no", a.app_no as "app_no", 
             a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.instmnt_mon as "instmnt_mon", a.non_interest_cl as "non_interest_cl", a.card_cl as "card_cl",
             a.state_cd as "state_cd", a.auth_type as "auth_type", fn_nm_code1('auth_type', a.auth_type) as "auth_type_nm",
             fn_nm_code2('trans_state_cl', a.svc_cd, case when ifnull(c.tid,'') = '' then a.state_cd else '7' end) as "state_nm",
             a.moid as "moid", a.cc_msg as "cc_msg", (select max(x.unm) from tb_cancel_history x where x.tid = a.tid and x.status = '0') as "cc_nm",
             a.ord_nm as "ord_nm", a.ord_email as "ord_email", a.ord_cp as "ord_cp", 
             a.ord_tel as "ord_tel", a.rcvr_nm as "rcvr_nm", a.rcvr_msg as "rcvr_msg", a.rcvr_address as "rcvr_address",
             b.deposit_amt as "deposit_amt", b.cc_deposit_amt as "cc_deposit_amt", b.cc_status as "cc_status", a.expire_dt as "expire_dt",
             a.goods_tax_amt as "goods_tax_amt", a.goods_duty_free as "goods_duty_free", a.compound_yn as "compound_yn",
             d.co_nm as "co_nm", d.co_no as "co_no", d.boss_nm as "boss_nm", d.addr as "addr", e.join_type as "join_type",
             (select sign from innopay.tb_trans_req i where i.shop_code = a.mid and i.pg_tid = a.tid and i.moid = a.moid) as "sign",
             e.addr_no1 as "addr_no1", e.addr_no2 as "addr_no2", d.card_mer_nm as "card_mer_nm", d.bill_co_nm as "bill_co_nm", d.bill_info as "bill_info",
             a.van_cd as "van_cd"
		from tb_card_trans a
		left join tb_trans_history b on a.tid = b.tid
		left outer join tb_part_cancel_history c on a.tid = c.tid
		left outer join tb_van_info d on a.van_cd = d.van_cd
		left outer join tb_merchant e on a.mid = e.mid
		]]>
      	where a.tid = #TID:VARCHAR#
      	<!-- 신용카드 자동결제 부분 추가(사용료 수납 발송) -->
      	union all
      	<![CDATA[
      	select 
      		b.svc_cd as "svc_cd", '' as "app_co", b.svc_prdt_cd as "svc_prdt_cd", '' as "trans_type",
			fn_nm_code1('svc_prdt_cd', b.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as"gid", a.aid as "aid",
			b.app_dt as "app_dt", b.app_tm as "app_tm", '' as "app_acqu_dt", '' as "app_ret_dt", 0 as "app_ret_cnt",
			'' as "app_rea_dt", 0 as "app_rea_cnt", '' as "app_settlmnt_dt", '' as "app_van",
			b.cc_dt as "cc_dt", b.cc_tm as "cc_tm", '' as "cc_acqu_dt", '' as "cc_ret_dt", 0 as "cc_ret_cnt", '' as "cc_rea_dt",
			0 as "cc_rea_cnt", '' as "cc_settlmnt_dt", '' as "acqu_van",
			fn_nm_code1('card_cd', b.card_cd) as "card_nm", b.card_no as "card_no", '' as "fn_no", b.app_no as "app_no", 
			b.goods_nm as "goods_nm", b.goods_amt as "goods_amt", b.instmnt_mon as "instmnt_mon", b.non_interest_cl as "non_interest_cl", '' as "card_cl",
			b.state_cd as "state_cd", '' as "auth_type", '' as "auth_type_nm",
			fn_nm_code2('trans_state_cl', b.svc_cd, b.state_cd) as "state_nm",
			b.moid as "moid", b.cc_msg as "cc_msg", b.cc_nm as "cc_nm",
			b.ord_nm as "ord_nm", b.ord_email as "ord_email", b.ord_cp as "ord_cp",
			'' as "ord_tel", '' as "rcvr_nm", '' as "rcvr_msg", '' as "rcvr_address",
			'' as "deposit_amt", '' as "cc_deposit_amt", '' as "cc_status", '' as "expire_dt",
			b.goods_amt as "goods_tax_amt", 0 as "goods_duty_free", '' as "compound_yn",
			b.co_nm as "co_nm", b.co_no as "co_no", b.boss_nm as "boss_nm", b.addr as "addr", a.join_type as "join_type",
			'' as "sign",
			a.addr_no1 as "addr_no1", a.addr_no2 as "addr_no2", b.card_mer_nm as "card_mer_nm", b.bill_co_nm as "bill_co_nm", b.bill_info as "bill_info",
			b.van_cd as "van_cd"
		from tb_merchant a
		left outer join (
			select 
				x.svc_cd as "svc_cd", x.svc_prdt_cd as "svc_prdt_cd", x.mid as "mid", y.tid as "tid",
				substring(y.receipt_dt,1,8) as "app_dt", substring(y.receipt_dt,9,16) as "app_tm",
				substring(y.cancel_dt,1,8) as "cc_dt", substring(y.cancel_dt,9,16) as "cc_tm", 
				y.appr_cd as "card_cd", y.card_no as "card_no", y.pg_approval_no as "app_no",
				x.goods_name as "goods_nm", y.receipt_amt as "goods_amt", y.card_quota as "instmnt_mon",
				y.card_interest as "non_interest_cl", y.state_cd as "state_cd",
				x.moid as "moid", y.cancel_msg as "cc_msg", y.cancel_req_name as "cc_nm", x.buyer_name as "ord_nm",
				x.buyer_email as "ord_email", x.buyer_tel as "ord_cp", z.co_nm as "co_nm", z.co_no as "co_no",
				z.boss_nm as "boss_nm", z.addr as "addr", z.card_mer_nm as "card_mer_nm", z.bill_co_nm as "bill_co_nm",
				z.bill_info as "bill_info", x.pg_cd as "van_cd"
			from tb_bill_req x
			left outer join tb_bill_receipt y on x.tid = y.tid
			left outer join tb_van_info z on x.pg_cd = z.van_cd
			) b on a.mid = b.mid
		]]>
		where b.tid = #TID:VARCHAR#
    </select>

  <select id="serDetailEPayTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    	<![CDATA[
      	select a.svc_cd as "svc_cd", a.app_co as "app_co", a.svc_prdt_cd as "svc_prdt_cd",
             fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as"gid", a.aid as "aid",
             a.app_dt as "app_dt", a.app_tm as "app_tm", b.app_acqu_dt as "app_acqu_dt", b.app_ret_dt as "app_ret_dt", ifnull(b.app_ret_cnt, 0) as "app_ret_cnt", 
             b.app_rea_dt as "app_rea_dt", ifnull(b.app_rea_cnt, 0) as "app_rea_cnt", b.app_settlmnt_dt as "app_settlmnt_dt", fn_nm_code1('van_cd', b.app_van) as "app_van",
             a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", b.cc_acqu_dt as "cc_acqu_dt", b.cc_ret_dt as "cc_ret_dt", ifnull(b.cc_ret_cnt, 0) as "cc_ret_cnt", b.cc_rea_dt as "cc_rea_dt", 
             ifnull(b.cc_rea_cnt, 0) as "cc_rea_cnt", b.cc_settlmnt_dt as "cc_settlmnt_dt", fn_nm_code1('van_cd', b.acqu_van) as "acqu_van",
             fn_nm_code1('card_cd', a.app_co) as "card_nm", fn_mask_cardno(a.card_no) as "card_no", a.fn_no as "fn_no", a.app_no as "app_no", 
             a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.instmnt_mon as "instmnt_mon", a.non_interest_cl as "non_interest_cl", a.card_cl as "card_cl",
             a.state_cd as "state_cd", a.auth_type as "auth_type", fn_nm_code1('auth_type', a.auth_type) as "auth_type_nm",
             fn_nm_code2('trans_state_cl', a.svc_cd, case when ifnull(c.tid,'') = '' then a.state_cd else '7' end) as "state_nm",
             a.moid as "moid", a.cc_msg as "cc_msg", (select max(x.unm) from tb_cancel_history x where x.tid = a.tid and x.status = '0') as "cc_nm",
             a.ord_nm as "ord_nm", a.ord_email as "ord_email", a.ord_cp as "ord_cp", 
             a.ord_tel as "ord_tel",
             b.deposit_amt as "deposit_amt", b.cc_deposit_amt as "cc_deposit_amt", b.cc_status as "cc_status", a.expire_dt as "expire_dt",
             d.co_nm as "co_nm", d.co_no as "co_no", d.boss_nm as "boss_nm", d.addr as "addr", e.join_type as "join_type",
             (select sign from innopay.tb_trans_req i where i.shop_code = a.mid and i.pg_tid = a.tid and i.moid = a.moid) as "sign",
             e.addr_no1 as "addr_no1", e.addr_no2 as "addr_no2", d.card_mer_nm as "card_mer_nm", d.bill_co_nm as "bill_co_nm", d.bill_info as "bill_info",
             a.van_cd as "van_cd"
		from tb_epay_trans a
		left join tb_trans_history b on a.tid = b.tid
		left outer join tb_part_cancel_history c on a.tid = c.tid
		left outer join tb_van_info d on a.van_cd = d.van_cd
		left outer join tb_merchant e on a.mid = e.mid
		]]>
      	where a.tid = #TID:VARCHAR#
      	<!-- 신용카드 자동결제 부분 추가(사용료 수납 발송) -->
      	union all
      	<![CDATA[
      	select 
      		b.svc_cd as "svc_cd", '' as "app_co", b.svc_prdt_cd as "svc_prdt_cd",
			fn_nm_code1('svc_prdt_cd', b.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as"gid", a.aid as "aid",
			b.app_dt as "app_dt", b.app_tm as "app_tm", '' as "app_acqu_dt", '' as "app_ret_dt", 0 as "app_ret_cnt",
			'' as "app_rea_dt", 0 as "app_rea_cnt", '' as "app_settlmnt_dt", '' as "app_van",
			b.cc_dt as "cc_dt", b.cc_tm as "cc_tm", '' as "cc_acqu_dt", '' as "cc_ret_dt", 0 as "cc_ret_cnt", '' as "cc_rea_dt",
			0 as "cc_rea_cnt", '' as "cc_settlmnt_dt", '' as "acqu_van",
			fn_nm_code1('card_cd', b.card_cd) as "card_nm", b.card_no as "card_no", '' as "fn_no", b.app_no as "app_no", 
			b.goods_nm as "goods_nm", b.goods_amt as "goods_amt", b.instmnt_mon as "instmnt_mon", b.non_interest_cl as "non_interest_cl", '' as "card_cl",
			b.state_cd as "state_cd", '' as "auth_type", '' as "auth_type_nm",
			fn_nm_code2('trans_state_cl', b.svc_cd, b.state_cd) as "state_nm",
			b.moid as "moid", b.cc_msg as "cc_msg", b.cc_nm as "cc_nm",
			b.ord_nm as "ord_nm", b.ord_email as "ord_email", b.ord_cp as "ord_cp",
			'' as "ord_tel",
			'' as "deposit_amt", '' as "cc_deposit_amt", '' as "cc_status", '' as "expire_dt",
			b.co_nm as "co_nm", b.co_no as "co_no", b.boss_nm as "boss_nm", b.addr as "addr", a.join_type as "join_type",
			'' as "sign",
			a.addr_no1 as "addr_no1", a.addr_no2 as "addr_no2", b.card_mer_nm as "card_mer_nm", b.bill_co_nm as "bill_co_nm", b.bill_info as "bill_info",
			b.van_cd as "van_cd"
		from tb_merchant a
		left outer join (
			select 
				x.svc_cd as "svc_cd", x.svc_prdt_cd as "svc_prdt_cd", x.mid as "mid", y.tid as "tid",
				substring(y.receipt_dt,1,8) as "app_dt", substring(y.receipt_dt,9,16) as "app_tm",
				substring(y.cancel_dt,1,8) as "cc_dt", substring(y.cancel_dt,9,16) as "cc_tm", 
				y.appr_cd as "card_cd", y.card_no as "card_no", y.pg_approval_no as "app_no",
				x.goods_name as "goods_nm", y.receipt_amt as "goods_amt", y.card_quota as "instmnt_mon",
				y.card_interest as "non_interest_cl", y.state_cd as "state_cd",
				x.moid as "moid", y.cancel_msg as "cc_msg", y.cancel_req_name as "cc_nm", x.buyer_name as "ord_nm",
				x.buyer_email as "ord_email", x.buyer_tel as "ord_cp", z.co_nm as "co_nm", z.co_no as "co_no",
				z.boss_nm as "boss_nm", z.addr as "addr", z.card_mer_nm as "card_mer_nm", z.bill_co_nm as "bill_co_nm",
				z.bill_info as "bill_info", x.pg_cd as "van_cd"
			from tb_bill_req x
			left outer join tb_bill_receipt y on x.tid = y.tid
			left outer join tb_van_info z on x.pg_cd = z.van_cd
			) b on a.mid = b.mid
		]]>
		where b.tid = #TID:VARCHAR#
    </select>

    <select id="serDetailAccntTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
            select a.svc_prdt_cd as "svc_prdt_cd", a.trans_type as "trans_type", 
             fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as "gid", a.aid as "aid",
             a.app_dt as "app_dt", a.app_tm as "app_tm", a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", a.refund_dt as "refund_dt", a.refund_tm as "refund_tm", 
             b.app_settlmnt_dt as "app_Settlmnt_dt", b.cc_settlmnt_dt as "cc_settlmnt_dt", a.goods_amt as "goods_amt", a.fn_id as "fn_id", fn_nm_code1('bank_cd', a.bank_cd) as "bank_nm", 
             a.accnt_no as "accnt_no", a.accnt_nm as "accnt_nm", a.goods_nm as "goods_nm", a.state_cd as "state_cd", a.ord_soc_no as "soc_no",
             case when a.state_cd = '0' then '승인'
                  when a.state_cd = '1' then '취소'
                  when a.state_cd = '2' then '환불'
                  else '' end as "state_nm", a.moid as "moid", a.cc_msg as "cc_msg", 
            (select max(x.unm) from tb_cancel_history x where x.tid = a.tid and x.status = '0') as "cc_nm",
            a.ord_nm as "ord_nm", a.ord_email as "ord_email", 
            a.ord_cp as "ord_cp", a.ord_tel as "ord_tel", a.rcvr_nm as "rcvr_nm", a.rcvr_msg as "rcvr_msg", a.rcvr_address as "rcvr_address",
            b.deposit_amt as "deposit_amt", b.cc_deposit_amt as "cc_deposit_amt"
      from tb_bank_trans a, tb_trans_history b
        ]]>
            where a.tid = #TID:VARCHAR#
            and b.tid = a.tid
    </select>

    <select id="serDetailVacctTransTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
            select a.svc_prdt_cd as "svc_prdt_cd", fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as "gid", a.aid as "aid",
               ifnull(a.app_dt,a.app_req_dt) as "app_dt", ifnull(a.app_tm,a.app_req_tm) as "app_tm", a.input_due_dt as "input_due_dt", a.input_acct_nm as "input_acct_nm", 
               fn_nm_code1('bank_cd', a.bank_cd) as "bank_nm", fn_nm_code1('bank_cd', a.input_bank_cd) as "input_bank_nm", a.vacct_no as "vacct_no", 
               a.goods_amt as "goods_amt", a.goods_nm as "goods_nm", 
               case when a.input_cl = 'Y' then '입금' else '요청' end as "input_cl", 
               a.moid as "moid", a.cc_msg as "cc_msg",
               (select max(x.unm) from tb_cancel_history x where x.tid = a.tid and x.status = '0') as "cc_nm",
               a.ord_nm as "ord_nm", a.ord_email as "ord_email", a.ord_cp as "ord_cp", a.ord_tel as "ord_tel",
               a.rcvr_nm as "rcvr_nm", a.rcvr_msg as "rcvr_msg", a.rcvr_address as "rcvr_address",
               b.deposit_amt as "deposit_amt", b.cc_deposit_amt as "cc_deposit_amt", a.state_cd as "state_cd",
               case when a.state_cd = '0' then '승인'
                    when a.state_cd = '1' then '취소'
                    when a.state_cd = '2' then '환불'
                    when a.state_cd = '3' then '입금대기'
                    else '' end as "state_nm",
               a.cc_dt as cc_dt, a.cc_tm as cc_tm
            from tb_vacct_trans a, tb_trans_history b   
        ]]>
            where a.tid = #TID:VARCHAR#
            and b.tid = a.tid
    </select>
    
    <select id="serDetailEasyBankTID" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
        select a.svc_prdt_cd as "svc_prdt_cd", a.trans_type as "trans_type", 
             fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm", a.mid as "mid", a.gid as "gid", a.aid as "aid",
             a.app_dt as "app_dt", a.app_tm as "app_tm", a.cc_dt as "cc_dt", a.cc_tm as "cc_tm", a.refund_dt as "refund_dt", a.refund_tm as "refund_tm", 
             b.app_settlmnt_dt as "app_Settlmnt_dt", b.cc_settlmnt_dt as "cc_settlmnt_dt", a.goods_amt as "goods_amt", a.fn_id as "fn_id", fn_nm_code1('bank_cd', a.ord_bank_cd) as "bank_nm", 
             a.ord_accnt_no as "accnt_no", a.ord_accnt_alias as "accnt_nm", a.goods_nm as "goods_nm", a.state_cd as "state_cd", a.eb_user_id as "soc_no",
             case when a.state_cd = '0' then '승인'
                  when a.state_cd = '1' then '취소'
                  when a.state_cd = '2' then '환불'
                  else '' end as "state_nm", a.moid as "moid", a.cc_msg as "cc_msg", 
            (select max(x.unm) from tb_cancel_history x where x.tid = a.tid and x.status = '0') as "cc_nm",
            a.ord_nm as "ord_nm", a.ord_email as "ord_email", 
            a.ord_cp as "ord_cp", a.ord_tel as "ord_tel", a.rcvr_nm as "rcvr_nm", a.rcvr_msg as "rcvr_msg", a.rcvr_address as "rcvr_address",
            b.deposit_amt as "deposit_amt", b.cc_deposit_amt as "cc_deposit_amt"
        from tb_easy_bank_trans a, tb_trans_history b
        ]]>
            where a.tid = #TID:VARCHAR#
            and b.tid = a.tid
    </select>

    <select id="getSvcCdOfTID" parameterClass="String" resultClass="String"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
          select ifnull(max(svc_cd), ' ')
          from tb_trans
          where tid = #strTID:VARCHAR#
        ]]>
    </select>

    <!-- 거래 히스토리 조회 -->
    <select id="TransHistorySearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
      select a.svc_cd as "svc_cd", a.svc_nm as "svc_nm", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.acqu_dt as "acqu_dt", a.settlmnt_dt as "settlmnt_dt", 
             a.tid as "tid", a.moid as "moid", a.ord_nm as "ord_nm", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.fee as "fee", a.vat as "vat", a.deposit_amt as "deposit_amt"
      from (
            select svc_cd, fn_nm_code1('svc_cd', svc_cd) svc_nm, app_dt, cc_dt, app_acqu_dt acqu_dt, app_settlmnt_dt settlmnt_dt,
                         tid, moid, ord_nm, goods_nm, goods_amt, fee, vat, deposit_amt
            from tb_trans_history a
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="trans"> app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> app_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            
            union all
            
            select svc_cd, fn_nm_code1('svc_cd', svc_cd) svc_nm, app_dt, cc_dt, cc_acqu_dt acqu_dt, cc_settlmnt_dt settlmnt_dt,
             tid, moid, ord_nm, goods_nm, (-1*goods_amt) goods_amt, cc_fee fee, cc_vat vat, cc_deposit_amt deposit_amt
      from tb_trans_history a
      <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="trans"> cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> cc_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
    ) a         
      order by a.app_dt desc, a.acqu_dt desc, a.settlmnt_dt desc, a.tid desc
    </select>

    <!-- 거래 히스토리 조회 -->
    <select id="TransHistorySearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        select a.svc_cd as "svc_cd", a.svc_nm as "svc_nm", a.app_dt as "app_dt", a.cc_dt as "cc_dt", a.acqu_dt as "acqu_dt", a.settlmnt_dt as "settlmnt_dt", 
             a.tid as "tid", a.moid as "moid", a.ord_nm as "ord_nm", a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", a.fee as "fee", a.vat as "vat", a.deposit_amt as "deposit_amt"
    from (
      select svc_cd, fn_nm_code1('svc_cd', svc_cd) svc_nm, app_dt, cc_dt, app_acqu_dt acqu_dt, app_settlmnt_dt settlmnt_dt,
             tid, moid, ord_nm, goods_nm, goods_amt, fee, vat, deposit_amt
      from tb_trans_history a
            where mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="trans"> app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> app_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            
            union all
      
      select svc_cd, fn_nm_code1('svc_cd', svc_cd) svc_nm, app_dt, cc_dt, cc_acqu_dt acqu_dt, cc_settlmnt_dt settlmnt_dt,
             tid, moid, ord_nm, goods_nm, (-1*goods_amt) goods_amt, cc_fee fee, cc_vat vat, cc_deposit_amt deposit_amt
      from tb_trans_history a
      where mid = #mid:VARCHAR#
      <isEqual prepend="AND" property="selDt" compareValue="trans"> cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> cc_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
    ) a     
    order by a.app_dt desc, a.acqu_dt desc, a.settlmnt_dt desc, a.tid desc
    </select>

    <select id="TransHistorySearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    select sum(a.totCnt) as "totCnt", sum(a.totAmt) as "totAmt", sum(a.totFee) as "totFee", sum(a.totVat) as "totVat", sum(a.totDepositAmt) as "totDepositAmt"
    from (      
            select count(tid) totCnt, sum(goods_amt) totAmt, sum(fee) totFee, sum(vat) totVat, sum(deposit_amt) totDepositAmt
            from tb_trans_history a
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="trans"> app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> app_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            
            union all
            
            select count(tid) totCnt, -1*sum(goods_amt) totAmt, sum(cc_fee) totFee, sum(cc_vat) totVat, sum(cc_deposit_amt) totDepositAmt
      from tb_trans_history a
      <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="trans"> cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> cc_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>      
      <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
    ) a
    </select>

    <select id="TransHistorySearchCnt2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
    select sum(a.totCnt) as "totCnt", sum(a.totAmt) as "totAmt", sum(a.totFee) as "totFee", sum(a.totVat) as "totVat", sum(a.totDepositAmt) as "totDepositAmt"
    from (    
      select count(tid) totCnt, sum(goods_amt) totAmt, sum(fee) totFee, sum(vat) totVat, sum(deposit_amt) totDepositAmt
      from tb_trans_history a
            where mid = #mid:VARCHAR#
            <isEqual prepend="AND" property="selDt" compareValue="trans"> app_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> app_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            
        union all
      
      select count(tid) totCnt, -1*sum(goods_amt) totAmt, sum(cc_fee) totFee, sum(cc_vat) totVat, sum(cc_deposit_amt) totDepositAmt
      from tb_trans_history a
      where mid = #mid:VARCHAR#
      <isEqual prepend="AND" property="selDt" compareValue="trans"> cc_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isEqual prepend="AND" property="selDt" compareValue="settlmnt"> cc_settlmnt_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
      <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
    ) a
    </select>

    <!-- 거래 실패 조회 (GID,AID로 로긴했을때) -->
    <select id="TransFailSearch1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
            select app_dt as "app_dt", fn_nm_code1('svc_cd', svc_cd) as "svc_nm", tid as "tid", goods_nm as "goods_nm", goods_amt as "goods_amt", ord_nm as "ord_nm", 
             case when a.svc_cd = '01' then concat(a.rslt_msg, '[', (select x.card_result_msg from tb_card_fail x where x.seq = a.seq), ']')
                  else a.rslt_msg end as "rslt_msg"
            from tb_fail_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
            and app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            <isNotEqual prepend="AND" property="FnCd" compareValue="all"> fn_cd = #fnCd:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
            order by app_dt desc
    </select>

    <!-- 거래 실패 조회 (MID로 로그인시) -->
    <select id="TransFailSearch2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
            <![CDATA[
                select app_dt as "app_dt", fn_nm_code1('svc_cd', svc_cd) as "svc_nm", tid as "tid", goods_nm as "goods_nm", goods_amt as "goods_amt", ord_nm as "ord_nm", 
             case when a.svc_cd = '01' then concat(a.rslt_msg, '[', (select x.card_result_msg from tb_card_fail x where x.seq = a.seq), ']')
                  else a.rslt_msg end as "rslt_msg"
                from tb_fail_trans a
            ]]>
                where mid = #mid:VARCHAR#
                and app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
                <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
                <isNotEqual prepend="AND" property="fnCd" compareValue="all"> fn_cd = #fnCd:VARCHAR# </isNotEqual>
                <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
                order by app_dt desc
    </select>

    <select id="TransFailSearchCnt1" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
            select count(1) as "totCnt"
            from tb_fail_trans a
        ]]>
            <isEqual prepend="WHERE" property="id_cl" compareValue="0"> mid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="1"> gid = #usr_id:VARCHAR# </isEqual>
            <isEqual prepend="WHERE" property="id_cl" compareValue="2"> aid = #usr_id:VARCHAR# </isEqual>
            and app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            <isNotEqual prepend="AND" property="FnCd" compareValue="all"> fn_cd = #fnCd:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotNull property="frAmt"> 
              <isNotNull prepend="AND" property="toAmt">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotNull>
            </isNotNull>
    </select>

    <select id="TransFailSearchCnt2" parameterClass="DataModel" resultClass="DataModel"><!-- cacheModel="TransSearchReadCache"-->
        <![CDATA[
            select count(1) as "totCnt"
            from tb_fail_trans a
        ]]>
            where mid = #mid:VARCHAR#
            and app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
            <isNotEqual prepend="AND" property="svcCd"  compareValue="all"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
            <isNotEqual prepend="AND" property="fnCd" compareValue="all"> fn_cd = #fnCd:VARCHAR# </isNotEqual>
            <isNotEqual prepend="AND" property="ordNm" compareValue=""> a.ord_nm = #ordNm:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
    </select>
    
    <!-- URL 통보 조회 (GID,AID로 로긴했을때) -->
  <select id="getUrlReInformLst1" parameterClass="DataModel" resultClass="DataModel">
    <![CDATA[
      select a.app_dt as "app_dt", a.cc_dt as "cc_dt", fn_nm_code1('svc_cd', a.svc_cd) as "svc_nm", a.svc_cd as "svc_cd", a.tid as "tid", a.moid as "moid", 
             a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", 
             case when a.url_snd_cd = '1' then '통보' else '통보실패' end as "url_snd_nm",
             a.url as "url", a.url_snd_dt as "url_snd_dt", a.url_snd_tm as "url_snd_tm"
      from tb_trans a
    ]]>
      <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
      and a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
      <isNotEqual prepend="AND" property="svcCd"  compareValue="00"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
      and a.url_snd_cd = #urlSendCd:VARCHAR#
      and a.url_snd_cd != '0'
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
      order by a.app_dt desc
  </select>

  <!-- URL 통보 조회 (MID로 로그인시) -->
  <select id="getUrlReInformLst2" parameterClass="DataModel" resultClass="DataModel">
      <![CDATA[
        select a.app_dt as "app_dt", a.cc_dt as "cc_dt", fn_nm_code1('svc_cd', a.svc_cd) as "svc_nm", a.svc_cd as "svc_cd", a.tid as "tid", a.moid as "moid", 
             a.goods_nm as "goods_nm", a.goods_amt as "goods_amt", 
             case when a.url_snd_cd = '1' then '통보' else '통보실패' end as "url_snd_nm",
             a.url as "url", a.url_snd_dt as "url_snd_dt", a.url_snd_tm as "url_snd_tm"
      from tb_trans a
      ]]>
        where a.mid = #mid:VARCHAR#
        and a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
        <isNotEqual prepend="AND" property="svcCd"  compareValue="00"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
        and a.url_snd_cd = #urlSendCd:VARCHAR#
        and a.url_snd_cd != '0'
              <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
              <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
              <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
        order by a.app_dt desc
  </select>

  <select id="getUrlReInformLstCnt1" parameterClass="DataModel" resultClass="int">
    <![CDATA[
      select count(1)
      from tb_trans a
    ]]>
      <isEqual prepend="WHERE" property="id_cl" compareValue="0"> a.mid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="1"> a.gid = #usr_id:VARCHAR# </isEqual>
      <isEqual prepend="WHERE" property="id_cl" compareValue="2"> a.aid = #usr_id:VARCHAR# </isEqual>
      and a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
      <isNotEqual prepend="AND" property="svcCd"  compareValue="00"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
      and a.url_snd_cd = #urlSendCd:VARCHAR#
      and a.url_snd_cd != '0'
            <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
            <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
            <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
  </select>

  <select id="getUrlReInformLstCnt2" parameterClass="DataModel" resultClass="int">
    <![CDATA[
      select count(1)
      from tb_trans a
    ]]>
      where a.mid = #mid:VARCHAR#
        and a.app_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
        <isNotEqual prepend="AND" property="svcCd"  compareValue="00"> (a.svc_cd = #svcCd:VARCHAR# or a.svc_cd in (select x.code1 from tb_code x where x.code_cl = '0022' and x.code2 = #svcCd:VARCHAR#))</isNotEqual>
        and a.url_snd_cd = #urlSendCd:VARCHAR#
        and a.url_snd_cd != '0'
              <isNotEqual prepend="AND" property="moid" compareValue=""> a.moid = #moid:VARCHAR#</isNotEqual>
              <isNotEqual prepend="AND" property="tid" compareValue=""> a.tid = #tid:VARCHAR#</isNotEqual>
              <isNotEqual property="frAmt" compareValue=""> 
              <isNotEqual prepend="AND" property="toAmt" compareValue="">
                a.goods_amt between #frAmt:VARCHAR# and #toAmt:VARCHAR# 
              </isNotEqual>
            </isNotEqual>
  </select>
    
   
  <select id="getMailSendSearch" parameterClass="DataModel" resultClass="DataModel">
    select send_dt as "send_dt", send_tm as "send_tm", co_nm as "co_nm", mid as "mid", tid as "tid", goods_nm as "goods_nm", amt as "amt", ord_nm as "ord_nm", 
           ord_email as "ord_email", seq as "seq", 'tb_mail_daily' as "table_nm", fn_nm_code1('mail_template', template_id) as "state_nm"
    from tb_mail_daily
    where tid = #TID:VARCHAR#
    union all
    select send_dt, send_tm, co_nm, mid, tid, goods_nm, amt, ord_nm, ord_email, seq, 'tb_mail' table_nm,
           fn_nm_code1('mail_template', template_id) state_nm
    from tb_mail
    where tid = #TID:VARCHAR#
    order by send_dt desc
  </select>

  <select id="getMailSendDetailSearch" parameterClass="DataModel" resultClass="DataModel">
    select mid as "mid", co_no as "co_no", co_nm as "co_nm", co_url as "co_url", co_tel as "co_tel", app_dt as "app_dt", app_tm as "app_tm", 
           cc_dt as "cc_dt", cc_tm as "cc_tm", state_cd as "state_cd", tid as "tid", svc_cd as "svc_cd", 
           case when b.code2 in ('calc', '*') then fn_nm_code1('svc_cd', a.svc_cd) else fn_nm_code1('svc_cd', b.code2) end as "svc_nm",
           amt as "amt", goods_nm as "goods_nm", ifnull(ord_nm, ' ') as "ord_nm", ord_email as "ord_email", instmnt_mon as "instmnt_mon", template_id as "template_id"
    <isEqual prepend="FROM" property="TableNm" compareValue="tb_mail_daily"> tb_mail_daily a, tb_code b </isEqual>
    <isEqual prepend="FROM" property="TableNm" compareValue="tb_mail"> tb_mail a, tb_code b </isEqual>
    where seq = #Seq:VARCHAR#
    and b.code_cl = '0022'
    and b.code1 = a.svc_cd
  </select>
  
  
  <!-- 부분취소 TID 상세내역 조회 -->
  <select id="getTransPartDetail" parameterClass="DataModel" resultClass="DataModel">
    select a.tid as "tid", a.cc_dt as "cc_dt", a.cc_amt as "cc_amt", a.remain_amt as "remain_amt", a.otid as "otid"
    from (
      SELECT  -1 cc_seq, tid, '' AS cc_dt, goods_amt AS cc_amt, 
            goods_amt AS remain_amt, tid AS otid 
            FROM tb_trans 
            WHERE tid in (SELECT DISTINCT(otid) as otid FROM tb_part_cancel_history WHERE tid = #TID:VARCHAR# )
            UNION ALL
            SELECT  cc_seq, tid, cc_dt, cc_amt, remain_amt, otid 
            FROM tb_part_cancel_history
            WHERE otid in (SELECT DISTINCT(otid) as otid FROM tb_part_cancel_history WHERE tid = #TID:VARCHAR# ) 
    ) a
    ORDER BY cc_seq
  </select> 
  
  <!-- 부분취소 원거래 TID 상세내역 조회 -->
  <select id="getTransPartOrgDetail" parameterClass="DataModel" resultClass="DataModel">
    SELECT  a.cc_seq as "cc_seq", a.tid as "tid", a.cc_dt as "cc_dt", a.cc_amt as "cc_amt", a.remain_amt as "remain_amt", a.otid as "otid"
    FROM (
            SELECT  -1 cc_seq, tid, '' AS cc_dt, goods_amt AS cc_amt, 
            goods_amt AS remain_amt, tid AS otid 
            FROM tb_trans 
            WHERE tid  = #TID:VARCHAR#
            UNION ALL
            SELECT  cc_seq, tid, cc_dt, cc_amt, remain_amt, otid 
            FROM tb_part_cancel_history
            WHERE otid = #TID:VARCHAR#
    ) a
    ORDER BY cc_seq
  </select> 
  
  <!-- 부분취소 원거래 및 부분거래 구별 쿼리-->
  <select id="getTransPartCheck" parameterClass="DataModel" resultClass="int">
    SELECT ifnull(SUM(a.cnt),0) as "cnt"
    FROM (
        SELECT 1 cnt
        FROM tb_part_cancel_history WHERE tid = #TID:VARCHAR#
        UNION ALL
        SELECT 2 cnt
        FROM tb_part_cancel_history WHERE otid = #TID:VARCHAR#
    ) a
  </select>
  
  <!-- 부분취소 최종 잔액을 가져온다.-->
  <select id="getTransPartRemain" parameterClass="DataModel" resultClass="int">
    SELECT ifnull(remain_amt,0) as "remain_amt "
    from (
      select remain_amt
        FROM (   
            SELECT 0 AS seq, goods_amt AS remain_amt
            FROM tb_trans WHERE tid = #TID:VARCHAR#
            UNION ALL
            SELECT cc_seq AS seq, remain_amt
            FROM tb_part_cancel_history WHERE otid = #TID:VARCHAR#
        ) a
        ORDER BY a.seq DESC
    )
    where rownum = 1
  </select>
  
  <select id="getTransList" parameterClass="DataModel" resultClass="DataModel">
    select
    	a.tid as "tid",
		a.mid as "mid",
		a.gid as "gid",
		a.aid as "aid",
		a.svc_cd as "svc_cd",
		a.svc_prdt_cd as "svc_prdt_cd",
		a.state_cd as "state_cd",
		a.trans_type as "trans_type",
		a.status as "status",
		a.cc_status as "cc_status",
		date_format(a.app_dt,'%Y-%m-%d') as "app_dt",
		a.cc_dt as "cc_dt",
		a.acqu_req_dt as "acqu_req_dt",
		a.app_acqu_dt as "app_acqu_dt",
		a.cc_acqu_dt as "cc_acqu_dt",
		a.app_ret_cnt as "app_ret_cnt",
		a.app_ret_dt as "app_ret_dt",
		a.cc_ret_cnt as "cc_ret_cnt",
		a.cc_ret_dt as "cc_ret_dt",
		a.app_rea_cnt as "app_rea_cnt",
		a.app_rea_dt as "app_rea_dt",
		a.cc_rea_cnt as "cc_rea_cnt",
		a.cc_rea_dt as "cc_rea_dt",
		a.app_settlmnt_dt as "app_settlmnt_dt",
		a.cc_settlmnt_dt as "cc_settlmnt_dt",
		a.fn_cd as "fn_cd",
		fn_nm_code1('card_cd', a.fn_cd) as "card_nm",
		a.fn_no as "fn_no",
		a.moid as "moid",
		a.err_cd as "err_cd",
		a.ord_nm as "ord_nm",
		a.goods_amt as "goods_amt",
		a.goods_tax_amt as "goods_tax_amt",
		a.goods_duty_free as "goods_duty_free",
		a.compound_yn as "compound_yn",
		a.goods_nm as "goods_nm",
		a.app_van as "app_van",
		a.acqu_van as "acqu_van",
		a.fee as "fee",
		a.vat as "vat",
		a.settlemnt_cycle as "settlemnt_cycle",
		a.deposit_amt as "deposit_amt",
		a.cc_deposit_amt as "cc_deposit_amt",
		a.cc_fee as "cc_fee",
		a.cc_vat as "cc_vat",
		a.stid as "stid",
		a.otid as "otid",
		a.subid as "subid",
		a.app_org_fee as "app_org_fee",
		a.cc_org_fee as "cc_org_fee",
		a.user_id as "user_id",
		a.buyer_code as "buyer_code",
		b.ord_email as "ord_email",
		b.app_no as "app_no",
		b.card_no as "card_no",
		b.app_tm as "app_tm",
		c.co_nm as "co_nm",
		c.tel_no as "tel_no"
    from tb_trans_history a
    left outer join tb_card_trans b on a.tid = b.tid
    join tb_merchant c on a.mid = c.mid
    where 1=1
    and a.svc_cd = #svc_cd:VARCHAR#
    and a.app_dt between #fr_dt:VARCHAR# and #to_dt:VARCHAR#
    <isNotEmpty prepend="AND" property="ord_email">
    	b.ord_email = #ord_email:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="app_no">
    	b.app_no = #app_no:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="card_no">
    	b.card_no = #card_no:VARCHAR#
    </isNotEmpty>
    order by a.app_dt desc
  </select>
  
  <select id="getVacctTransList" parameterClass="DataModel" resultClass="DataModel">
    select
    	a.tid as "tid",
		a.mid as "mid",
		a.gid as "gid",
		a.aid as "aid",
		a.svc_cd as "svc_cd",
		a.svc_prdt_cd as "svc_prdt_cd",
		a.state_cd as "state_cd",
		a.trans_type as "trans_type",
		a.status as "status",
		a.cc_status as "cc_status",
		date_format(a.app_dt,'%Y-%m-%d') as "app_dt",
		a.cc_dt as "cc_dt",
		a.acqu_req_dt as "acqu_req_dt",
		a.app_acqu_dt as "app_acqu_dt",
		a.cc_acqu_dt as "cc_acqu_dt",
		a.app_ret_cnt as "app_ret_cnt",
		a.app_ret_dt as "app_ret_dt",
		a.cc_ret_cnt as "cc_ret_cnt",
		a.cc_ret_dt as "cc_ret_dt",
		a.app_rea_cnt as "app_rea_cnt",
		a.app_rea_dt as "app_rea_dt",
		a.cc_rea_cnt as "cc_rea_cnt",
		a.cc_rea_dt as "cc_rea_dt",
		a.app_settlmnt_dt as "app_settlmnt_dt",
		a.cc_settlmnt_dt as "cc_settlmnt_dt",
		a.fn_cd as "fn_cd",
		fn_nm_code1('card_cd', a.fn_cd) as "card_nm",
		a.fn_no as "fn_no",
		a.moid as "moid",
		a.err_cd as "err_cd",
		a.ord_nm as "ord_nm",
		a.goods_amt as "goods_amt",
		a.goods_tax_amt as "goods_tax_amt",
		a.goods_duty_free as "goods_duty_free",
		a.compound_yn as "compound_yn",
		a.goods_nm as "goods_nm",
		a.app_van as "app_van",
		a.acqu_van as "acqu_van",
		a.fee as "fee",
		a.vat as "vat",
		a.settlemnt_cycle as "settlemnt_cycle",
		a.deposit_amt as "deposit_amt",
		a.cc_deposit_amt as "cc_deposit_amt",
		a.cc_fee as "cc_fee",
		a.cc_vat as "cc_vat",
		a.stid as "stid",
		a.otid as "otid",
		a.subid as "subid",
		a.app_org_fee as "app_org_fee",
		a.cc_org_fee as "cc_org_fee",
		a.user_id as "user_id",
		a.buyer_code as "buyer_code",
		b.ord_email as "ord_email",
		b.vacct_no as "vacct_no",
		b.app_tm as "app_tm",
		c.co_nm as "co_nm",
		c.tel_no as "tel_no"
    from tb_trans_history a
    left outer join tb_vacct_trans b on a.tid = b.tid
    join tb_merchant c on a.mid = c.mid
    where 1=1
    and a.svc_cd = #svc_cd:VARCHAR#
    and a.app_dt between #fr_dt3:VARCHAR# and #to_dt3:VARCHAR#
    <isNotEmpty prepend="AND" property="goods_amt">
    	a.goods_amt = #goods_amt:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="app_no">
    	b.app_no = #app_no:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="vacct_no">
    	b.vacct_no = #vacct_no:VARCHAR#
    </isNotEmpty>
    order by a.app_dt desc
  </select>  
  
  <select id="getBankTransList" parameterClass="DataModel" resultClass="DataModel">
    select
    	a.tid as "tid",
		a.mid as "mid",
		a.gid as "gid",
		a.aid as "aid",
		a.svc_cd as "svc_cd",
		a.svc_prdt_cd as "svc_prdt_cd",
		a.state_cd as "state_cd",
		a.trans_type as "trans_type",
		a.status as "status",
		a.cc_status as "cc_status",
		date_format(a.app_dt,'%Y-%m-%d') as "app_dt",
		a.cc_dt as "cc_dt",
		a.acqu_req_dt as "acqu_req_dt",
		a.app_acqu_dt as "app_acqu_dt",
		a.cc_acqu_dt as "cc_acqu_dt",
		a.app_ret_cnt as "app_ret_cnt",
		a.app_ret_dt as "app_ret_dt",
		a.cc_ret_cnt as "cc_ret_cnt",
		a.cc_ret_dt as "cc_ret_dt",
		a.app_rea_cnt as "app_rea_cnt",
		a.app_rea_dt as "app_rea_dt",
		a.cc_rea_cnt as "cc_rea_cnt",
		a.cc_rea_dt as "cc_rea_dt",
		a.app_settlmnt_dt as "app_settlmnt_dt",
		a.cc_settlmnt_dt as "cc_settlmnt_dt",
		a.fn_cd as "fn_cd",
		fn_nm_code1('card_cd', a.fn_cd) as "card_nm",
		a.fn_no as "fn_no",
		a.moid as "moid",
		a.err_cd as "err_cd",
		a.ord_nm as "ord_nm",
		a.goods_amt as "goods_amt",
		a.goods_tax_amt as "goods_tax_amt",
		a.goods_duty_free as "goods_duty_free",
		a.compound_yn as "compound_yn",
		a.goods_nm as "goods_nm",
		a.app_van as "app_van",
		a.acqu_van as "acqu_van",
		a.fee as "fee",
		a.vat as "vat",
		a.settlemnt_cycle as "settlemnt_cycle",
		a.deposit_amt as "deposit_amt",
		a.cc_deposit_amt as "cc_deposit_amt",
		a.cc_fee as "cc_fee",
		a.cc_vat as "cc_vat",
		a.stid as "stid",
		a.otid as "otid",
		a.subid as "subid",
		a.app_org_fee as "app_org_fee",
		a.cc_org_fee as "cc_org_fee",
		a.user_id as "user_id",
		a.buyer_code as "buyer_code",
		b.ord_email as "ord_email",
		b.accnt_no as "accnt_no",
		b.app_tm as "app_tm",
		c.co_nm as "co_nm",
		c.tel_no as "tel_no"
    from tb_trans_history a
    left outer join tb_bank_trans b on a.tid = b.tid
    join tb_merchant c on a.mid = c.mid
    where 1=1
    and a.svc_cd = #svc_cd:VARCHAR#
    and a.app_dt between #fr_dt2:VARCHAR# and #to_dt2:VARCHAR#
    <isNotEmpty prepend="AND" property="goods_amt_bank">
    	a.goods_amt = #goods_amt_bank:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="accnt_no">
    	right(b.accnt_no, 5) = #accnt_no:VARCHAR#
    </isNotEmpty>
    <isNotEmpty prepend="AND" property="ord_nm">
    	b.ord_nm = #ord_nm:VARCHAR#
    </isNotEmpty>
    order by a.app_dt desc
  </select>
  
  <select id="getSubNoticeList" parameterClass="DataModel" resultClass="DataModel">
    select
    	a.seq as "seq",
		a.inform_cl as "inform_cl",
		a.head as "head",
		a.inform_cd as "inform_cd",
		a.status as "status",
		a.reg_dt as "reg_dt",
		a.reg_emp as "reg_emp",
		a.sub_notice_yn as "sub_notice_yn",
		a.sub_notice as "sub_notice",
		a.sub_notice_fr_dt as "sub_notice_fr_dt",
		a.sub_notice_to_dt as "sub_notice_to_dt"
    from tb_inform a
	where a.sub_notice_yn = 'Y'
	and date_format(now(), '%Y%m%d') between sub_notice_fr_dt and sub_notice_to_dt
	order by seq desc
  </select>
  
	<select id="getCardTransBuyAgree" parameterClass="DataModel" resultClass="DataModel">
        select a.mid as mid,
		       a.co_nm as co_nm,
		       concat(a.addr_no1, ' ', a.addr_no2) as addr_no,
		       a.tel_no as tel_no,
		       b.goods_name as goods_name,
		       b.goods_amt as goods_amt,
		       b.goods_tax_amt as goods_tax_amt,
		       b.goods_duty_free as goods_duty_free,
		       b.buyer_name as buyer_name,
		       b.buyer_cellphone_no as buyer_hp_no,
		       b.buyer_email as buyer_email,
		       b.card_no as card_no,
		       b.card_expire_dt as card_expire_dt,
		       b.card_quota as card_quota,
		       b.shop_license_key as shop_license_key,
		       b.step as step,
		       b.pg_code as pg_code,
		       b.user_id as user_id,
		       b.svc_cd as svc_cd,
		       b.svc_prdt_cd as svc_prdt_cd,
		       b.buyer_code as buyer_code,
		       if(b.expire_date > now(), 'Y', 'N') as expire_yn,
		       b.order_code as order_code,
		       b.pg_mid as pg_mid,
		       c.goods_cnt as goods_cnt,
		       d.goods_summary as goods_desc,
		       e.compound_yn as compound_yn,
		       f.sign_image as sign_image
		from tb_merchant a
		left outer join tb_order b on a.mid = b.mid
		left outer join tb_order_item c on b.order_code = c.order_code
		left outer join tb_goods d on c.goods_seq = d.goods_seq
		left outer join tb_card_trans e on e.tid = b.tid
		left outer join tb_auth_sign f on e.tid = f.tid
		where 1=1
		and e.svc_cd = '01' and e.svc_prdt_cd = '01'
		and e.tid = #TID:VARCHAR#
		order by b.regist_date, c.item_seq asc limit 1
	</select>
    
</sqlMap>