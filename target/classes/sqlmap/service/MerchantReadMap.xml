<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="MerchantRead">
    <typeAlias alias="DataModel" type="mobile.DataModel"/>
    
  <select id="getCompInfo" parameterClass="DataModel" resultClass="DataModel">
      select	co_no as "co_no", 
				co_nm as "co_nm", 
				co_cl as "co_cl", 
				host_cl as "host_cl", 
				boss_nm as "boss_nm", 
				boss_rrn as "boss_rrn", 
				open_dt as "open_dt", 
				state_cd as "state_cd", 
				corp_no as "corp_no", 
				post_no as "post_no", 
				addr_no1 as "addr_no1", 
				addr_no2 as "addr_no2", 
				rpost_no as "rpost_no", 
				raddr_no1 as "raddr_no1", 
				raddr_no2 as "raddr_no2",
				bs_kind as "bs_kind", 
				gd_kind as "gd_kind", 
				product_nm as "product_nm", 
				tel_no as "tel_no", 
				fax_no as "fax_no", 
				email as "email", 
				month_sale_amt as "month_sale_amt", 
				fund_amt as "fund_amt", 
				comp_grade as "comp_grade", 
				recv_dt as "recv_dt", 
				cont_dt as "cont_dt", 
				mn_bs_kind as "mn_bs_kind", 
				cont_dt as "cont_dt",
				cont_nm as "cont_dt", 
				cont_tel as "cont_tel", 
				cont_fax as "cont_fax", 
				cont_cp as "cont_cp", 
				cont_email as "cont_email", 
				cont_status as "cont_status", 
				co_url as "co_url", 
				recv_channel as "recv_chaneel", 
				dept as "dept", 
				emp0 as "emp0", 
				emp1 as "emp1",  
				emp2 as "emp2", 
				on_svc_lst as "on_svc_lst",
				pay_flg1 as "pay_flg1",
				pay_flg2 as "pay_flg2",
				corp_no as "corp_no",
				ifnull((select max(x.account_id) from tb_merchant x where x.co_no = a.co_no), '') as "account_id"
      from tb_comp a
      where co_no = #co_no:VARCHAR#

  </select>

  <select id="getCompFee" parameterClass="String" resultClass="DataModel">
    select min(status) as "status",
      trim(max(case when svc_cd = '01' and fn_cd = '01' then fee end)) as "fee_010101",
      max(case when svc_cd = '01' and fn_cd = '02' then fee end) as "fee_010102",
      max(case when svc_cd = '01' and fn_cd = '03' then fee end) as "fee_010103",
      max(case when svc_cd = '01' and fn_cd = '04' then fee end) as "fee_010104",
      max(case when svc_cd = '01' and fn_cd = '06' then fee end) as "fee_010106",
      max(case when svc_cd = '01' and fn_cd = '07' then fee end) as "fee_010107",
      max(case when svc_cd = '01' and fn_cd = '08' then fee end) as "fee_010108",
      max(case when svc_cd = '01' and fn_cd = '12' then fee end) as "fee_010112",
	  	max(case when svc_cd = '01' and fn_cd = '16' then fee end) as "fee_010116",
      max(case when svc_cd = '02' and fr_amt = 1 then fee end)	as "fee_020101",
      max(case when svc_cd = '02' and fr_amt = 10001 then fee end) as "fee_020102",
      FORMAT(floor(avg(case when svc_cd = '03' then fee end)), 0) as "fee_030100",
      max(case when svc_cd = '03' and fn_cd = '003' then fee end) as "fee_0301003",
      max(case when svc_cd = '03' and fn_cd = '004' then fee end) as "fee_0301004",
      max(case when svc_cd = '03' and fn_cd = '005' then fee end) as "fee_0301005",
      max(case when svc_cd = '03' and fn_cd = '007' then fee end) as "fee_0301007",
      max(case when svc_cd = '03' and fn_cd = '011' then fee end) as "fee_0301011",
      max(case when svc_cd = '03' and fn_cd = '020' then fee end) as "fee_0301020",
      max(case when svc_cd = '03' and fn_cd = '023' then fee end) as "fee_0301023",
      max(case when svc_cd = '03' and fn_cd = '027' then fee end) as "fee_0301027",
      max(case when svc_cd = '03' and fn_cd = '031' then fee end) as "fee_0301031",
      max(case when svc_cd = '03' and fn_cd = '032' then fee end) as "fee_0301032",
      max(case when svc_cd = '03' and fn_cd = '034' then fee end) as "fee_0301034",
      max(case when svc_cd = '03' and fn_cd = '037' then fee end) as "fee_0301037",
      max(case when svc_cd = '03' and fn_cd = '039' then fee end) as "fee_0301039",
      max(case when svc_cd = '03' and fn_cd = '045' then fee end) as "fee_0301045",
      max(case when svc_cd = '03' and fn_cd = '071' then fee end) as "fee_0301071",
      max(case when svc_cd = '03' and fn_cd = '081' then fee end) as "fee_0301081",      
      max(case when svc_cd = '03' and fn_cd = '088' then fee end) as "fee_0301088"          
    from tb_settlmnt_fee
    where id = #value:VARCHAR#
    and status = '1'
    and to_dt = '99999999'
  </select>
  
  <select id="getCardMemberList" parameterClass="DataModel" resultClass="DataModel">
    select fn_no as "fn_no", fn_cd as "fn_cd", co_no as "co_no", join_type as "join_type", non_interest_cl as "non_interest_cl", main_nm as "main_nm", point_cl as "point_cl", use_nm as "use_nm"
    from tb_card_member
    where date_format(now(), '%Y%m%d') between fr_dt and to_dt
    and fn_cd = #fn_cd:VARCHAR#
    and non_interest_cl = #non_inst:VARCHAR#
    and (member_cl = '00' or member_cl = #member_cl:VARCHAR#)    
    <isNotNull prepend="AND" property="join_type"> join_type = #join_type:VARCHAR# </isNotNull>
    order by fn_no
  </select>

  <select id="getCardMemberPointClUse" parameterClass="DataModel" resultClass="String">
    select ifnull(point_cl,'0') as "point_cl"
    from tb_card_member
    where fn_cd = #fn_cd:VARCHAR#
    and fn_no = #fn_no:VARCHAR#
  </select>

  <select id="getCPIDList" parameterClass="DataModel" resultClass="DataModel">
    select fn_cd as "fn_cd", svc_cd as "svc_cd", svc_prdt_cd as "svc_prdt_cd", fn_id as "fn_id", use_nm as "use_nm", memo as "memo"
    from tb_cpid
    where date_format(now(), '%Y%m%d') between fr_dt and to_dt
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd in ('00', #svc_prdt_cd:VARCHAR#)
	<isNotNull prepend="AND" property="goods_cl"> goods_cl = #goods_cl:VARCHAR# </isNotNull>
  </select>

  <select id="MerchantRead.getMIDInfo" parameterClass="DataModel" resultClass="DataModel">
      select	a.mid as "mid", a.gid as "gid", a.aid as "aid", a.co_no as "co_no", a.co_nm as "co_nm", co_cl as "co_cl", host_cl as "host_cl", 
				a.boss_nm as "boss_nm", a.use_cl as "use_cl", a.post_no as "post_no", a.addr_no1 as "addr_no1", a.addr_no2 as "addr_no2", rpost_no as "rpost_no", 
				raddr_no1 as "raddr_no1", raddr_no2 as "raddr_no2", a.bs_kind as "bs_kind", a.gd_kind as "gd_kind",
				a.main_goods as "main_goods", a.tel_no as "tel_no", a.fax_no as "fax_no", a.email as "email", a.grade as "grade", a.cont_dt as "cont_dt", 
				a.bs_kind as "nm_bs_kind", a.join_type as "join_use", acqu_cl as "acqu_cl", acqu_day as "acqu_day", pay_id_cl as "pay_id_cl", a.merchant_type as "merchant_type",
				tax_iss_cycle as "tax_iss_cycle", limit_cl as "limit_cl", card_use as "card_use", card_block as "card_block", cc_cl as "cc_cl", 
				cc_part_cl as "cc_part_cl", cc_chk as "cc_chk", case when ifnull(cc_chk, '0') = '0' then '미적용' else '적용' end  as "cc_chk_nm", 
				pay_inform as "pay_inform", cash_inform as "cash_inform", rcpt_cl as "rcpt_cl", cash_rcpt_auto_cl as "cash_rcpt_auto_cl", cont_dt as "cont_dt", 
				auto_cal_cl as "auto_cal_cl", can_pw as "can_pw", mid_url as "mid_url", pay_logo as "pay_logo", slogan as "slogan", dept as "dept", emp0 as "emp0", emp1 as "emp1", emp2 as "emp2",
				a.cont_emp as "cont_emp", a.cont_emp_email as "cont_emp_email", a.cont_emp_tel as "cont_emp_tel", a.cont_emp_cp as "cont_emp_cp", vat_mark as "vat_mark", vacct_limit as "vacct_limit", 
				vacct_type as "vacct_type", auth_flg as "auth_flg",
				a.tech_emp as "tech_emp", a.tech_emp_email as "tech_emp_email", a.tech_emp_tel as "tech_emp_tel", a.tech_emp_cp as "tech_emp_cp",
				a.settlmnt_emp as "settlmnt_emp", a.settlmnt_emp_email as "settlmnt_emp_email", a.settlmnt_emp_tel as "settlmnt_emp_tel", a.settlmnt_emp_cp as "settlmnt_emp_cp",
				sign_nm as "sign_nm", soc_no as "soc_no",				
				fn_nm_code1('join_type', join_type) as "join_type_nm",
				case when cash_rcpt_auto_cl = '0' then '자동발급' else '수동발급' end as "cash_rcpt_auto_nm",
				fn_nm_code1('pay_inform', pay_inform) as "pay_inform_nm",
				case when rcpt_cl = '0' then '발행' when rcpt_cl = '1' then '미발행' else '영수증(거래확인서)' end as  "rcpt_nm",
				case when vat_mark = '0' then '표시' else '미표시' end as "vat_mark_nm",
				fn_nm_code1('acqu_cl', acqu_cl) as "acqu_nm",
				fn_nm_code1('id_cl', pay_id_cl) as "pay_id_nm",
				fn_nm_code1('cc_cl', cc_cl) as "cc_nm",
				case when auto_cal_cl = '0' then '미적용' else '적용' end as "auto_cal_nm",
				case when vacct_type = '1' then 'random' when vacct_type = '2' then 'fix' else 'bulk' end as "vacct_type_nm",
				case   when auth_flg = '0' then '일반'
                  when auth_flg = '1' then '본인인증'
                  when auth_flg = '2' then 'KeyIn'
                  when auth_flg = '3' then 'KeyIn본인인증' end as "auth_flg_nm",
				ifnull(app_van1, '01') as "app_van1", ifnull(app_van2, '01') as "app_van2", ifnull(acqu_van, '01') as "acqu_van", escrow_cl as "escrow_cl", 
				case when ifnull(escrow_cl, '0') = '0' then '미사용' else '사 용' end as "escrow_nm",
				ifnull(fn_nm_code1('van_cd', app_van1), '미설정') as "app_van1_nm",
				ifnull(fn_nm_code1('van_cd', app_van2), '미설정') as "app_van2_nm",
				ifnull(fn_nm_code1('van_cd', acqu_van), '미설정') as "acqu_van_nm",
				cp_auth_cl as "cp_auth_cl", 
        case when ifnull(cp_auth_cl, '0') = '0' then '인증안함' else '인 증' end as "cp_auth_nm",
				vm_sms_cl as "vm_sms_cl", 
        case when ifnull(vm_sms_cl, '0') = '0' then '자 동' else 'SMS' end as "vm_sms_nm",
				sales_pay_cl as "sales_pay_cl", 
        case when ifnull(sales_pay_cl, '0') = '0' then '불가능' else '가능' end as "sales_pay_nm",
				limit_instmn as "limit_instmn", limit_instmn_smart as "limit_instmn_smart", 
				om_sett_cl as "om_sett_cl", 
        case when om_sett_cl = '0' then '미적용' else '적용' end as "om_sett_nm",
				(select x.emp_nm from tb_user x where x.emp = emp0) as "emp0_nm",
				(select x.emp_nm from tb_user x where x.emp = emp1) as "emp1_nm",
				(select x.emp_nm from tb_user x where x.emp = emp2) as "emp2_nm",
				bill_type as "bill_type", safe_bill_cd as "safe_bill_cd", req_auth_cl as "req_auth_cl",
				case when bill_type like '%1%' then 'true' else 'false' end as "bill_type1",
				case when bill_type like '%2%' then 'true' else 'false' end as "bill_type2",
				case when bill_type like '%3%' then 'true' else 'false' end as "bill_type3",
				cp_sliding_cl as "cp_sliding_cl", mer_emp as "mer_emp", mer_emp_tel as "mer_emp_tel", mer_emp_email as "mer_emp_email",
				sub_mer_type as "sub_mer_type", hpp_part_type as "hpp_part_type", card_use_point as "card_use_point", co_cl as "co_cl", corp_no as "corp_no",
				mn_bs_kind as "mn_bs_kind",
				(select x.service_val from tb_settlmnt_service x where x.id_cl ='1' and x.id = a.mid and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt and x.status ='0' and x.service_cl ='0001') as "cal_after",
				ifnull((select x.service_val from tb_settlmnt_service x where x.id_cl ='1' and x.id = a.mid and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt and x.status ='0' and x.service_cl ='0002'), case when a.merchant_type = '02' then '01' else '00' end) as "tax_reg",
				(select x.service_val from tb_settlmnt_service x where x.id_cl ='1' and x.id = a.mid and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt and x.status ='0' and x.service_cl ='0003') as "tax_def",
				(select x.service_val from tb_settlmnt_service x where x.id_cl ='1' and x.id = a.mid and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt and x.status ='0' and x.service_cl ='0004') as "tax_type",
				(select x.service_val from tb_settlmnt_service x where x.id_cl ='1' and x.id = a.mid and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt and x.status ='0' and x.service_cl ='0005') as "cal_type",
				ifnull(SUBSTR(ifnull(cc_part_cl,'0000'),1,1),'0') as "cc_part_card",
				ifnull(SUBSTR(ifnull(cc_part_cl,'0000'),2,1),'0') as "cc_part_acct",
				ifnull(SUBSTR(ifnull(cc_part_cl,'0000'),3,1),'0') as "cc_part_vacct",
				a.account_id as "account_id", a.mid_nm as "mid_nm",
				case when a.pay_id_cl = '3' then b.tax_email else a.tax_email end as "tax_email", 
        		case when a.pay_id_cl = '3' then b.bank_cd else a.bank_cd end as "bank_cd", 
				fn_nm_code1('bank_cd', case when a.pay_id_cl = '3' then b.bank_cd else a.bank_cd end) as "bank_nm", 
        		case when a.pay_id_cl = '3' then b.accnt_no else a.accnt_no end as "accnt_no",
        		case when a.pay_id_cl = '3' then b.accnt_nm else a.accnt_nm end as "accnt_nm", 
				a.taxi_id as "taxi_id", a.taxi_code as "taxi_code", a.call_code as "call_code", a.off_cat_id as "off_cat_id",				
				case when ifnull(a.merchant_type, '01') = '01' then '온라인' 
				     when ifnull(a.merchant_type, '01') = '02' then '오프라인택시' 
				     else '' end as "merchant_type_nm"      
      from tb_merchant a, tb_id_group b
      where mid = #mid:VARCHAR#
      and b.gid = a.gid
  </select> 
  
  <!-- 정산 수수료 정보 -->
  <select id="getSettlmntFeeInfo" parameterClass="DataModel" resultClass="DataModel">
    <isNull prepend="SELECT" property="fr_dt">
      svc_cd as "svc_cd", svc_prdt_cd as "svc_prdt_cd", max(fr_amt) as "fr_amt", max(to_amt) as "to_amt", max(fr_dt) as "fr_dt", max(to_dt) as "to_dt", max(fee_type) as "fee_type",
      max( case when svc_cd = '02' and fr_amt = 1       then '01'
           when svc_cd = '02' and fr_amt = 100001 and to_amt = 1000000  then '02'
		   when svc_cd = '02' and fr_amt = 1000001   then '03'
		   when svc_cd = '02' and fr_amt = 5000001   then '04'
		   when svc_cd = '02' and fr_amt = 10000   then '02'
		   when svc_cd = '02' and fr_amt = 30001   then '03'
		   when svc_cd = '02' and fr_amt = 50001   then '04'
		   when svc_cd = '02' and fr_amt = 70001   then '05'
		   when svc_cd = '02' and fr_amt = 100001 and to_amt = 500000   then '06'
		   when svc_cd = '02' and fr_amt = 500001   then '07'           
           else fn_cd
      end) as "fn_cd",
      max( case when fee_type = 3    then FORMAT(fee, 0) else FORMAT(fee, 2) end  ) as "fee", 
	  max(FORMAT(min_fee, 0)) as "min_fee",
	  max(FORMAT(refund_fee, 0)) as "refund_fee"	
    </isNull>
    <isNotNull prepend="SELECT" property="fr_dt"> svc_cd</isNotNull>
    from tb_settlmnt_fee a
    where id = #id:VARCHAR#
    and id_cl = #id_cl:VARCHAR#
    and status in ('0', #status:VARCAHR#)
    <isNull prepend="AND" property="fr_dt"> date_format(now(), '%Y%m%d') between fr_dt and to_dt</isNull>
    <isNotNull prepend="AND" property="fr_amt"> fr_amt = #fr_amt:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="fn_cd"> fn_cd = #fn_cd:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="fr_dt"> fr_dt = #fr_dt:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="svc_cd"> svc_cd = #svc_cd:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="svc_prdt_cd"> svc_prdt_cd = #svc_prdt_cd:VARCHAR#</isNotNull>
    <isNull prepend="GROUP BY" property="fr_dt"> svc_cd, svc_prdt_cd, fn_cd, fr_amt</isNull>  
    <isNull prepend="UNION ALL" property="fr_dt">
    select svc_cd as "svc_cd", svc_prdt_cd as "svc_prdt_cd",max(fr_amt) as "fr_amt", max(to_amt) as "to_amt", max(fr_dt) as "fr_dt", max(to_dt) as "to_dt", max(fee_type) as "fee_type", 
			'00' as "fn_cd",  
			 case when svc_cd = '01' then FORMAT(avg(fee), 2) 
           when svc_cd = '02' then FORMAT(avg(fee), 2) 
           when svc_cd = '03' then FORMAT(floor(avg(fee)), 0)
           else FORMAT(avg(fee), 2)  
           end as "fee", FORMAT(floor(avg(min_fee)), 0) as "min_fee", FORMAT(floor(avg(refund_fee)), 0) as "refund_fee"
    from tb_settlmnt_fee a
    where id = #id:VARCHAR#
    and id_cl = #id_cl:VARCHAR#
    and status in ('0', #status:VARCAHR#) 
    and fee_type = (case when svc_cd = '03' then '3' else '2' end)   
    <isNull prepend="AND" property="fr_dt"> date_format(now(), '%Y%m%d') between fr_dt and to_dt</isNull>
    <isNotNull prepend="AND" property="fr_amt"> fr_amt = #fr_amt:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="fn_cd"> fn_cd = #fn_cd:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="fr_dt"> fr_dt = #fr_dt:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="svc_cd"> svc_cd = #svc_cd:VARCHAR#</isNotNull>
    <isNotNull prepend="AND" property="svc_prdt_cd"> svc_prdt_cd = #svc_prdt_cd:VARCHAR#</isNotNull>
    group by svc_cd, svc_prdt_cd
    </isNull> 
  </select>

  <select id="getCheckFee" parameterClass="DataModel" resultClass="int">
    select count(*) as "cnt"
    from tb_settlmnt_fee
    where id_cl = '1'
    and svc_cd = #svc_cd:VARCHAR#
	and id = #id:VARCHAR#
	and status = '1'
	<isNotNull prepend="AND" property="check_dt">  fr_dt >= #check_dt:VARCHAR#  </isNotNull>
	<isNotNull prepend="AND" property="cpid">  fn_cd = #cpid:VARCHAR#  </isNotNull>
  </select>

  <!-- AID수수료 정보 -->
  <select id="getSettlmntFeeAIDLst" parameterClass="DataModel" resultClass="DataModel">
    select	a.id as "id", a.id_cl as "id_cl", case when fee_type = 3    then FORMAT(fee, 0) else FORMAT(fee, 2) end as "fee",
			a.svc_cd as "svc_cd", FORMAT(a.etc_fee, 2) as "etc_fee", a.profit_share1 as "profit_share1", a.profit_share2 as "profit_share2",
			a.fr_dt as "fr_dt", a.to_dt as "to_dt"
    from tb_settlmnt_fee a
    where a.id = #id:VARCHAR#
	and a.id_cl ='3'
    and a.to_dt ='99999999'
  </select>


  <!-- 카드 가맹점 정보 -->
  <select id="getCardMemberInfo" parameterClass="DataModel" resultClass="DataModel">
    select max(a.fn_no) as "fn_no", a.svc_prdt_cd as "svc_prdt_cd", a.fn_cd as "fn_cd",
           case when b.non_interest_cl = '0' then '01' when b.non_interest_cl = '1' then '02' end as "non_inst", b.join_type as "join_type"
    from tb_join_info a left outer join tb_card_member b on a.fn_no = b.fn_no and date_format(now(), '%Y%m%d') between b.fr_dt and b.to_dt
    where a.mid = #id:VARCHAR#
    and date_format(now(), '%Y%m%d') between a.fr_dt and a.to_dt
    group by b.non_interest_cl, a.svc_prdt_cd, a.fn_cd, b.join_type
  </select>

  <!-- 카드 가맹점 정보 오늘자 카운트 -->
  <select id="getJoinInfoToDayCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_join_info
    where mid = #mid:VARCHAR#
    and fn_cd = #fn_cd:VARCHAR#
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
    and fr_dt = date_format(now(), '%Y%m%d')
    and fn_no = #fn_no_old:VARCHAR#
  </select>


  <select id="getCardMCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_card_member
    where fn_no = #fnNo:VARCHAR#
    and fn_cd = #cardCd:VARCHAR#
	and to_dt ='99999999'
  </select>

  <!-- 정산주기 -->
  <select id="getSettlmntCycleInfo" parameterClass="DataModel" resultClass="DataModel">
    select max(settlmnt_cycle) as "settlmnt_cycle", svc_cd as "svc_cd", svc_prdt_cd as "svc_prdt_cd", fn_nm_code1('settlmnt_cycle',  max(settlmnt_cycle)) as "settlmnt_cycle_nm", 
           max(ifnull(settlmnt_type, '0')) as "settlmnt_type", max(case when ifnull(settlmnt_type, '0') = '0' then '승인정산' else '입금정산' end) as "settlmnt_type_nm"
    from tb_settlmnt_cycle
    where mid = #id:VARCHAR#
    and date_format(now(), '%Y%m%d') between fr_dt and to_dt
    group by svc_cd, svc_prdt_cd
  </select>

  <!-- 정산주기 오늘자 카운트 -->
  <select id="getSettlmntCycleInfoCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_settlmnt_cycle
    where mid = #mid:VARCHAR#
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
    and fr_dt = date_format(now(), '%Y%m%d')
  </select>

   <!-- 정산부가서비스 카운트 -->
  <select id="getSettlmntServiceInfoCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_settlmnt_service
    where id = #id:VARCHAR#
	and id_cl = #id_cl:VARCHAR#
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
	and service_cl = #service_cl:VARCHAR#
    and fr_dt = date_format(now(), '%Y%m%d')
  </select>

  <!-- 지불수단 사용여부 -->
  <select id="getMerSvcInfo" parameterClass="DataModel" resultClass="DataModel">
    select max(status) as "use_cl", svc_cd as "svc_cd", svc_prdt_cd as "svc_prdt_cd", use_dt as "use_dt"
    from tb_mer_svc
    where mid = #id:VARCHAR#
    group by svc_cd, svc_prdt_cd, use_dt
  </select>
  
  <!-- 지불수단 사용여부 Data 존재 여부 -->
  <select id="cntMerSvcInfo" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_mer_svc
    where mid = #mid:VARCHAR#
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
  </select>
    
  <!-- Down Item 존재여부 -->
  <select id="getMerDownItem" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    from tb_mer_downitem
    where mid = #mid:VARCHAR# and svc_cd = #svc_cd:VARCHAR#
  </select>
  
  <!-- CPID 정보 -->
  <select id="getMerCPIDInfo" parameterClass="DataModel" resultClass="DataModel">
    select max(a.fn_no) as "fn_id_0201"          
    from tb_join_info a, tb_cpid b
    where a.mid = #id:VARCHAR#
    and date_format(now(), '%Y%m%d') between a.fr_dt and a.to_dt
    and b.fn_id = a.fn_no
    and date_format(now(), '%Y%m%d') between b.fr_dt and b.to_dt
  </select>

  <select id="getGIDInfo" parameterClass="DataModel" resultClass="DataModel">
    select gid as "gid", g_nm as "g_nm", co_no as "co_no", '' as "card", '' as "bank", bank_cd as "bank_cd", accnt_no as "accnt_no", accnt_nm as "accnt_nm", tax_email as "tax_email"
    from tb_id_group
    where gid = #gid:VARCHAR#
  </select>

  <select id="getGIDList" parameterClass="DataModel" resultClass="DataModel">
    select gid as "gid", g_nm as "g_nm", co_no as "co_no", bank_cd as "bank_cd", accnt_no as "accnt_no", accnt_nm as "accnt_nm", tax_email as "tax_email"
    from tb_id_group
    order by gid
  </select>

  <select id="getGMIDList" parameterClass="DataModel" resultClass="DataModel">
    select co_no as "co_no", mid as "mid", co_nm as "co_nm"
    from tb_merchant
    where gid = #gid:VARCHAR#
    order by mid
  </select>

  <select id="getAIDList" parameterClass="DataModel" resultClass="DataModel">
    select aid as "aid", a_nm as "nm", co_no as "co_no", bank_cd as "bank_cd", accnt_no as "accnt_no", accnt_nm as "accnt_nm", email as "email"
    from tb_id_account
    order by aid
  </select>

  <select id="getAIDInfo" parameterClass="DataModel" resultClass="DataModel">
    select	aid as "aid", a_nm as "a_nm", co_no as "co_no", bank_cd as "bank_cd", accnt_no as "accnt_no", accnt_nm as "accnt_nm", settlmnt_cycle as "settlmnt_cycle", email as "email",
		     (select FORMAT(avg(s.fee), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl='3' and to_dt ='99999999' ) as "fee",
			 (select FORMAT(avg(s.etc_fee), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl='3' and to_dt ='99999999' ) as "etc_fee",
			 (select FORMAT(avg(s.profit_share1), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl = '3' and to_dt = '99999999') as "profit_share1",
			 (select FORMAT(avg(s.profit_share2), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl = '3' and to_dt = '99999999') as "profit_share2"
    from tb_id_account a
    where aid = #aid:VARCHAR#
  </select>
  
  <select id="getAMIDList" parameterClass="DataModel" resultClass="DataModel">
    select co_no as "co_no", mid as "mid", co_nm as "co_nm"
    from tb_merchant
    where aid = #aid:VARCHAR#
    order by mid
  </select>
  
  <select id="getCoNoMIDList" parameterClass="DataModel" resultClass="DataModel">
    select co_no as "co_no", mid as "mid", co_nm as "co_nm"
    from tb_merchant
    where co_no = #coNo:VARCHAR#
    order by mid
  </select>

  <select id="getIDList" parameterClass="DataModel" resultClass="DataModel">
    <isEqual prepend="SELECT" property="type" compareValue="MID"> mid</isEqual>
    <isEqual prepend="SELECT" property="type" compareValue="GID"> gid</isEqual>
    <isEqual prepend="SELECT" property="type" compareValue="AID"> aid</isEqual>
    <isEqual prepend="FROM" property="type" compareValue="MID"> tb_merchant</isEqual>
    <isEqual prepend="FROM" property="type" compareValue="GID"> tb_id_group</isEqual>
    <isEqual prepend="FROM" property="type" compareValue="AID"> tb_id_account</isEqual>
    <isEqual prepend="WHERE" property="type" compareValue="MID"> mid = #id:VARCHAR#</isEqual>
    <isEqual prepend="WHERE" property="type" compareValue="GID"> gid = #id:VARCHAR#</isEqual>
    <isEqual prepend="WHERE" property="type" compareValue="AID"> aid = #id:VARCHAR#</isEqual>
  </select>

  <select id="getMerchantFeeRegLst" parameterClass="DataModel" resultClass="DataModel">
  <![CDATA[
    select	max(b.co_no) as "co_no", 
			max(b.co_nm) as "co_nm", b.mid as "mid", a.svc_cd as "svc_cd", 
			a.svc_prdt_cd as "svc_prdt_cd", 
			ifnull(fn_nm_code1('svc_cd', a.svc_cd), a.svc_cd) as "svc_nm", 
			fn_nm_code1('svc_prdt_cd', a.svc_prdt_cd) as "svc_prdt_nm",
			a.fee_type as "fee_type", 
			max(c.avg_fee) as "before_avg_fee", 
			avg(a.fee) as "after_avg_fee", 
			a.fr_dt as "fr_dt", 
			max(a.status) as "status", 
			a.fee_type as "fee_type",
			a.reg_dt as "reg_dt"
      from tb_settlmnt_fee a left outer join tb_merchant b on a.id = b.mid left outer join
      (
        select id, svc_cd, svc_prdt_cd, fee_type, avg(fee) avg_fee, reg_dt
        from tb_settlmnt_fee
        where id_cl = '1'
        and status = '1'
        and date_format(now(), '%Y%m%d') between fr_dt and to_dt
        group by svc_cd, svc_prdt_cd, fee_type, id, reg_dt
      ) c on a.id = c.id and a.svc_cd = c.svc_cd and a.svc_prdt_cd = c.svc_prdt_cd and a.fee_type = c.fee_type
    where a.id_cl = '1'
    and a.fr_dt >= date_format(now(), '%Y%m%d')
     group by a.svc_cd, a.svc_prdt_cd, a.fee_type, b.mid, a.fr_dt, a.reg_dt
  ]]>
  </select>

  <select id="getMerchantFeeRegCnt" parameterClass="DataModel" resultClass="String">
    select fn_cd as "fn_cd"
    from tb_settlmnt_fee
    where id = #mid:VARCHAR#
    and id_cl = '1'
    and svc_cd = #svc_cd:VARCHAR#
    and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
    and fn_cd in (
      select fn_cd
      from tb_settlmnt_fee
      where id = #mid:VARCHAR#
      and id_cl = '1'
      and svc_cd = #svc_cd:VARCHAR#
      and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
      and fr_dt = #fr_dt:VARCHAR#
      and fee_type = #fee_type:VARCHAR#
      and status = '0'
    )
    and fee_type = #fee_type:VARCHAR#
    and status = '1'
    and to_dt = '99999999'
  </select>

   <select id="getMerchantFeeAIDCnt" parameterClass="DataModel" resultClass="int">
	  select sum(cnt) as "cnt"
	  from 
	  (	   select count(id) cnt
		   from tb_settlmnt_fee
		   where id = #id:VARCHAR#
		   and id_cl = '3'
		   and svc_cd = #svc_cd:VARCHAR#
		   and svc_prdt_cd = #svc_prdt_cd:VARCHAR#
		   and status = '1'
		   and to_dt = '99999999'
		   group by id
		   union all
		   select 0 cnt from dual
	   ) a
  </select>


  <select id="getFoundationLst" parameterClass="DataModel" resultClass="DataModel">
    select a.co_no as "co_no", a.co_nm as "co_nm", a.mid as "mid", a.gid as "gid", a.aid as "aid",
           a.tel_no as "tel_no",  fn_nm_code1('join_type',a.join_type) as "join_type",
           case when a.use_cl = '0' then '사용' else '사용안함' end as "status", a.cont_dt as "cont_dt",
           (select count(1) from tb_cont_img s where s.co_no = a.co_no) as "cont_img" ,
           a.boss_nm as "boss_nm", a.mid_url as "mid_url", a.fax_no as "fax_no", a.email as "email", a.tel_no as "tel_no",
		   (select s.emp_nm from tb_user s where s.emp = a.emp0) as "emp0", 
		   (select s.emp_nm from tb_user s where s.emp = a.emp1) as "emp1", 
			a.settlmnt_emp as "settlmnt_emp", a.settlmnt_emp_tel as "settlmnt_emp_tel", a.settlmnt_emp_email as "settlmnt_emp_email",
			a.tech_emp as "tech_emp", a.tech_emp_tel as "tech_emp_tel", a.tech_emp_email as "tech_emp_email", a.escrow_cl as "escrow_cl",
		    (select  b.desc1 from tb_mer_svc s, tb_code b  where s.status ='1' and s.svc_cd = b.code1 and b.code_cl ='0022' and s.mid = a.mid and s.svc_cd ='01') as "use01",
			(select  b.desc1 from tb_mer_svc s, tb_code b  where s.status ='1' and s.svc_cd = b.code1 and b.code_cl ='0022' and s.mid = a.mid and s.svc_cd ='02') as "use02",
			(select  b.desc1 from tb_mer_svc s, tb_code b  where s.status ='1' and s.svc_cd = b.code1 and b.code_cl ='0022' and s.mid = a.mid and s.svc_cd ='03') as "use03",
			(select  b.desc1 from tb_mer_svc s, tb_code b  where s.status ='1' and s.svc_cd = b.code1 and b.code_cl ='0022' and s.mid = a.mid and s.svc_cd ='04') as "use04",
			corp_no as "corp_no", soc_no as "soc_no", addr_no1 as "addr_no1", addr_no2 as "addr_no2", mn_bs_kind as "mn_bs_kind", post_no as "post_no",
			(
				select
					case when b.service_val = '00' then '승인'
          			when b.service_val = '01' then '매입'
          			when b.service_val = '02' then '정산'
					end
				from tb_settlmnt_service b where to_dt ='99999999' and b.id_cl ='1' and b.id = a.mid and service_cl ='0004'
			) as "service_cl",
			a.account_id as "account_id", a.merchant_type as "merchant_type"
    from tb_merchant a
	where 1 = 1
    <isEqual prepend="AND" property="id_cl" compareValue="gid" > a.gid = #id:VARCHAR# </isEqual>
    <isEqual prepend="AND" property="id_cl" compareValue="mid" > a.mid = #id:VARCHAR# </isEqual>
	<isEqual prepend="AND" property="id_cl" compareValue="aid" > a.aid = #id:VARCHAR# </isEqual>
    <isEqual prepend="AND" property="id_cl" compareValue="co_no"> a.co_no = #id:VARCHAR# </isEqual>
    <isEqual prepend="AND" property="id_cl" compareValue="co_nm"> a.co_nm like concat('%', #id:VARCHAR#, '%') </isEqual>	
	<isEqual prepend="AND" property="strUse" compareValue="0"> a.use_cl = '0'  </isEqual>
	<isEqual prepend="AND" property="strUse" compareValue="1"> a.use_cl in ('1','2')  </isEqual>
	<isNotEqual prepend="AND" property="selCycle" compareValue="all"> a.mid in (  select mid from  tb_settlmnt_cycle where date_format(now(), '%Y%m%d') between fr_dt and to_dt and settlmnt_cycle = #selCycle:VARCHAR# )    </isNotEqual>
	<isNotNull property="checkPay"> 
		<isEqual prepend="AND" property="payWhereCheck" compareValue="1"> a.mid in (  select mid from tb_mer_svc  where status ='1' and svc_cd in ( $payWhere$ ) )  </isEqual>
	</isNotNull>
	<isNotNull property="chkdate"> 
		<isEqual prepend="AND" property="selDate" compareValue="1"> a.cont_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
		<isEqual prepend="AND" property="selDate" compareValue="2"> a.reg_dt between #frDt:VARCHAR# and #toDt:VARCHAR# </isEqual>
	</isNotNull>
	<isNotEqual property="selJoinType" compareValue="all">
	  <isEqual prepend="AND" property="selJoinType" compareValue="0">
	    a.mid not in (
	      select x.mid
        from tb_merchant x, tb_join_info y, tb_card_member z
        where x.mid = y.mid 
        and date_format(now(), '%Y%m%d') between y.fr_dt and y.to_dt
        and y.svc_cd = '01' and to_number(z.fn_no) = to_number(y.fn_no)
        and z.fn_cd = y.fn_cd
        and z.join_type = '1'
        group by x.mid
        having count(z.join_type) > 0
      )
    </isEqual>
    <isEqual prepend="AND" property="selJoinType" compareValue="1">
	    a.mid not in (
	      select x.mid
        from tb_merchant x, tb_join_info y, tb_card_member z
        where x.mid = y.mid 
        and date_format(now(), '%Y%m%d') between y.fr_dt and y.to_dt
        and y.svc_cd = '01' and to_number(z.fn_no) = to_number(y.fn_no)
        and z.fn_cd = y.fn_cd
        and z.join_type = '0'
        group by x.mid
        having count(z.join_type) > 0
      )
    </isEqual>
	  <isEqual prepend="AND" property="selJoinType" compareValue="9">
	    a.mid in (
	      select x.mid
        from tb_merchant x, tb_join_info y, tb_card_member z
        where x.mid = y.mid 
        and date_format(now(), '%Y%m%d') between y.fr_dt and y.to_dt
        and y.svc_cd = '01' and to_number(z.fn_no) = to_number(y.fn_no)
        and z.fn_cd = y.fn_cd
        group by x.mid
        having count(distinct z.join_type) > 1
      )
    </isEqual>
    and a.mid in (select x.mid from tb_mer_svc x where x.svc_cd = '01' and status = '1')
    and a.mid in (select x.mid from tb_join_info x where x.svc_cd = '01' and date_format(now(), '%Y%m%d') between x.fr_dt and x.to_dt)
	</isNotEqual>
	order by a.reg_dt desc
  </select>

  <select id="getFoundationInfo" parameterClass="DataModel" resultClass="DataModel">
    select aid as "aid", a_nm as "nm"
    from tb_id_account
    order by aid
  </select>
  
  <select id="getAIDLst" parameterClass="DataModel" resultClass="DataModel">
  	select a.co_no as "co_no", a.a_nm as "a_nm", a.aid as "aid", a.email as "email", fn_nm_code1('bank_cd', a.bank_cd) as "bank_nm", a.accnt_no as "accnt_no", a.accnt_nm as "accnt_nm",
           fn_nm_code1('settlmnt_cycle', a.settlmnt_cycle) as "settlmnt_cycle", ifnull((select max(x.usrid) from tb_id_user x where x.aid = a.aid and x.login_cd = 'aid'), 'x') as "usrid",
		   (select FORMAT(avg(s.fee), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl='3' and to_dt ='99999999' ) as "fee",
		   (select FORMAT(avg(s.etc_fee), 2) from tb_settlmnt_fee s where s.id = a.aid and s.id_cl='3' and to_dt ='99999999' ) as "etc_fee"
	from tb_id_account a
	where a.reg_dt between #frDt:VARCHAR# and #toDt:VARCHAR#
	<isNotEqual property="id" compareValue="all">
		<isEqual prepend="AND" property="id_cl" compareValue="aid" > a.aid = #id:VARCHAR# </isEqual>
    	<isEqual prepend="AND" property="id_cl" compareValue="co_no"> a.co_no = #id:VARCHAR# </isEqual>
    	<isEqual prepend="AND" property="id_cl" compareValue="co_nm"> a.co_nm like concat('%', #id:VARCHAR#, '%') </isEqual>
	</isNotEqual>	
  </select>
   
  <select id="getUseCardChk" parameterClass="String" resultClass="DataModel">
    select a.code1 as "code1", a.code2 as "code2", a.desc1 as "desc1",
           case when b.card_use like concat('%', a.code1, '%') then 'false' else 'true' end as "internet",
           case when b.card_use_point like concat('%', a.code1, '%') then 'true' else 'false' end as "point"
    from tb_code a left outer join tb_merchant b on b.mid = #value:VARCHAR#
    where a.col_nm = 'card_cd' 
    and a.use_cl = '0' 
    and a.code2 = 'pur'
    union all
    select a.code1 as "code1", a.code2 as "code2", a.desc1 as "desc1",
           case when b.card_block like concat('%', a.code1, '%') then 'true' else 'false' end as "internet",
           case when b.card_use_point like concat('%', a.code1, '%') then 'true' else 'false' end as "point"
    from tb_code a left outer join tb_merchant b on b.mid = #value:VARCHAR#
    where a.col_nm = 'card_cd' 
    and a.use_cl = '0' 
    and a.code2 != 'pur'
  </select>
  
  <select id="getVMUserLst" parameterClass="DataModel" resultClass="DataModel">
    select	pid as "pid", uname as "uname", cp_no as "cp_no", email as "email", 
			reg_dt as "reg_dt", fail_cnt as "fail_cnt", 
			case when status = '0' then '가입' when status = '1' then '탈퇴' else '중지' end as "status_nm"
    from tb_m_person
    <isEqual prepend="WHERE" property="selCode" compareValue="cpNo" > cp_no = #serText:VARCHAR# </isEqual>
    <isEqual prepend="WHERE" property="selCode" compareValue="pID" > pid = #serText:VARCHAR# </isEqual>
    <isEqual prepend="WHERE" property="selCode" compareValue="socNo"> soc_no = #serText:VARCHAR# </isEqual>
    <isEqual prepend="WHERE" property="selCode" compareValue="name"> uname like concat('%', #serText:VARCHAR#, '%') </isEqual>
  </select>
  
  <select id="getCPIDCellPhoneInfo" parameterClass="DataModel" resultClass="DataModel">
    select case when service_cl = '1' then '일반결제' 
                when service_cl = '2' then '빌링'
                when service_cl = '3' then '인증'                
                else '' end as "service_nm", 
           case when goods_cl = '0' then '컨텐츠'
                when goods_cl = '1' then '현물'
                else '' end as "goods_nm"
    from tb_cpid
    where svc_cd = #svcCd:VARCHAR# and fn_id = #fnId:VARCHAR# and date_format(now(), '%Y%m%d') between fr_dt and to_dt
  </select>
  
  <select id="getMIDMailSearch" parameterClass="String" resultClass="DataModel">
    select boss_nm as "boss_nm", tel_no as "tel_no", email as "email", 
           cont_emp as "cont_emp", cont_emp_cp as "cont_emp_cp", cont_emp_tel as "cont_emp_tel", cont_emp_email as "cont_emp_email", 
           settlmnt_emp as "settlmnt_emp", settlmnt_emp_cp as "settlmnt_emp_cp", settlmnt_emp_tel as "settlmnt_emp_tel", settlmnt_emp_email as "settlmnt_emp_email", 
           tech_emp as "tech_emp", tech_emp_cp as "tech_emp_cp", tech_emp_tel as "tech_emp_tel", tech_emp_email as "tech_emp_email"
    from tb_merchant
    where mid = #value#
  </select>

  <select id="getJoinType" parameterClass="String" resultClass="String">
    select join_type as "join_type"
    from tb_merchant
    where mid = #value:VARCHAR#
  </select>

  <!-- ========================   회원사지원: 패스워드 초기화 START ========================= -->
  <!-- 회원사 리스트  -->
  <select id="merchant.getMerchantUserTotal" parameterClass="DataModel" resultClass="int">
    select count(a.usrid) as "cnt"
      from tb_id_user a, tb_merchant b
     where b.mid = a.mid 
        <isEqual prepend="AND" property="selCode" compareValue="CoNo"> b.co_no   </isEqual>
        <isEqual prepend="AND" property="selCode" compareValue="CoNm"> b.co_nm </isEqual>
        <isEqual prepend="AND" property="selCode" compareValue="Mid"> b.mid </isEqual>
        like concat('%', #serText:VARCHAR#, '%')
  </select>  

  <!-- 회원사 조회 리스트 -->
  <select id="merchant.getMerchantUserList" parameterClass="DataModel" resultClass="DataModel">
    select b.co_nm as "coNm", b.co_no as "coNo", b.mid as "mid", a.usrid as "uid"
      from tb_id_user a, tb_merchant b
     where b.mid = a.mid 
        <isEqual prepend="AND" property="selCode" compareValue="CoNo"> b.co_no </isEqual>
        <isEqual prepend="AND" property="selCode" compareValue="CoNm"> b.co_nm </isEqual>
        <isEqual prepend="AND" property="selCode" compareValue="Mid"> b.mid </isEqual>
        like concat('%', #serText:VARCHAR#, '%')
  </select> 
  <!-- ========================   회원사지원: 패스워드 초기화  END ========================= -->

  <select id="getDeliName" parameterClass="DataModel" resultClass="String">
		SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH(COL_DES,',')),2) AS "deli_name"  
		FROM 
		(
			select '1' A, s.COL_DES, ROWNUM RNUM  
			from tb_change_val s 
			WHERE s.table_nm = #tb_nm:VARCHAR# 
  			AND s.col = #col_v:VARCHAR# 
  			AND s.col_val IN ( $deli_value$ )
		 ) START WITH RNUM =1
		CONNECT BY PRIOR RNUM = RNUM -1 AND PRIOR A = A;
  </select>
  
  <select id="getCodeClName" parameterClass="DataModel" resultClass="String">
		SELECT SUBSTR(MAX(SYS_CONNECT_BY_PATH(DESC1,',')),2) AS "deli_name"  
		FROM 
		(
			select '1' A, DESC1, ROWNUM RNUM  
			from tb_code 
			where code_cl = #code_cl:VARCHAR# and code1 IN ( $deli_value$ )
		 ) START WITH RNUM =1
		CONNECT BY PRIOR RNUM = RNUM -1 AND PRIOR A = A;
  </select>
  
   <!-- 변경 이력 조회 수수료  -->
  <select id="getChangeSettlmntFeeCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    FROM tb_settlmnt_fee a 
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	  AND a.id_cl = (
		  				case when #id_cl:VARCHAR# = '1' then '0'
						when #id_cl:VARCHAR# = '2' then '1'
						when #id_cl:VARCHAR# = '3' then '2'
						when #id_cl:VARCHAR# = '4' then '3'
						end
					)
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
  </select>
  
  <!-- 변경 이력 조회 수수료  -->
  <select id="getChangeSettlmntFee" parameterClass="DataModel" resultClass="DataModel">
    SELECT   
	          a.id as "mid", (CASE WHEN a.id_cl ='0' THEN '사업자' ELSE '회원사' END) AS "id_cl",  
			 (CASE WHEN a.svc_cd ='sms' THEN 'SMS'
			       ELSE (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0022' AND s.code1 = a.svc_cd) END) as "svc_cd", 
			 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0023' AND s.code1 = a.svc_prdt_cd) svc_prdt_cd, 
			 (CASE WHEN svc_cd ='01' THEN (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0002' AND s.code1 = a.fn_cd) 
			       WHEN svc_cd ='02' THEN '모든은행' 
			       WHEN svc_cd ='03' THEN (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0001' AND s.code1 = a.fn_cd) 		     		       
			       ELSE '' END) AS "fn_cd",
			 a.fr_dt as "fr_dt", a.to_dt as "to_dt", min_fee as "min_fee", 
			 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0010' AND s.code1 = a.fee_type) as "fee_type", 
			 fee as "fee", 
			 CASE WHEN svc_cd ='02' THEN fr_amt ELSE 0 END AS "fr_amt", 
			 CASE WHEN svc_cd ='02' THEN to_amt ELSE 0 END AS "to_amt",
			 (SELECT s.emp_nm FROM tb_user s WHERE s.emp = a.worker) worker, concat(reg_dt, reg_tm) as "mtime"
	  FROM tb_settlmnt_fee a 
	  WHERE  a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	  AND a.id_cl = (
		  				case when #id_cl:VARCHAR# = '1' then '0'
						when #id_cl:VARCHAR# = '2' then '1'
						when #id_cl:VARCHAR# = '3' then '2'
						when #id_cl:VARCHAR# = '4' then '3'
						end
					)
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
	  ORDER BY a.id, id_cl, svc_cd, svc_prdt_cd,  fr_dt, fr_amt
  </select> 
  
   <!-- 변경 이력 조회 정산주기  -->
  <select id="getChangeSettlmntCycleCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    FROM tb_settlmnt_cycle a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.mid = #id:VARCHAR# </isNotEqual>
  </select>
  
  <!-- 변경 이력 조회 정산주기  -->
  <select id="getChangeSettlmntCycle" parameterClass="DataModel" resultClass="DataModel">
     SELECT a.mid as "mid", 
		 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0022' AND s.code1 = a.svc_cd) as "svc_cd",
		 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0023' AND s.code1 = a.svc_prdt_cd) as "svc_prdt_cd", 
		 a.fr_dt as "fr_dt", a.to_dt as "to_dt", 
		 (CASE WHEN a.settlmnt_type ='1' THEN '입금정산' WHEN a.settlmnt_type ='0' THEN '승인정산' ELSE '' END) as "settlmnt_type", 
		 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0038' AND s.code1 = a.settlmnt_cycle) as "settlmnt_cycle", 
		 (SELECT s.emp_nm FROM tb_user s WHERE s.emp = a.worker) as "worker", concat(reg_dt, reg_tm) as "mtime"	
	  FROM tb_settlmnt_cycle a
	  WHERE  a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.mid = #id:VARCHAR# </isNotEqual>
	  ORDER BY  a.mid, a.svc_cd, a.svc_prdt_cd, a.fr_dt
  </select> 



  <select id="getChangeServiceInfoCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    FROM tb_settlmnt_service a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
  </select>
  

  <select id="getChangeServiceInfo" parameterClass="DataModel" resultClass="DataModel">
      select  a.id as "mid",
          a.fr_dt as "fr_dt", a.to_dt as "to_dt", 
          (SELECT max(s.desc1) FROM tb_code s WHERE s.code_cl ='0080'  and s.code2 = a.service_val and s.code1 = a.service_cl) as "settlmnt_type",
          (SELECT s.desc2 FROM tb_code s WHERE s.code_cl ='0080'and s.code2 = a.service_val and s.code1 = a.service_cl) as "settlmnt_cycle",
          (SELECT s.emp_nm FROM tb_user s WHERE s.emp = a.worker) as "worker", concat(reg_dt, reg_tm) as "mtime"
	 from tb_settlmnt_service a
	 where a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR#
	 <isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
	  order by a.id , a.service_cl
  </select> 
  
  
   <!-- 변경 이력 조회 입금이력  -->
  <select id="getChangeCompPayCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    FROM tb_comp_pay a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR# 
	<isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
  </select>
  
  <!-- 변경 이력 조회 입금이력  -->
  <select id="getChangeCompPay" parameterClass="DataModel" resultClass="DataModel">
     SELECT  a.id as "mid", a.id_cl as "id_cl", 
		  (CASE WHEN a.pay_cl ='1' THEN '초기등록비' WHEN a.pay_cl ='2' THEN '연관리비' 
			WHEN a.pay_cl ='3' THEN '보증보험' WHEN a.pay_cl ='4' THEN '부가서비스'
			ELSE '' END) as "pay_cl", 
		  (CASE WHEN a.pay_cl ='0' THEN '미면제' WHEN a.pay_cl ='1' THEN '면제' 
			ELSE '' END) as "exp_cl",
		  req_amt as "req_amt", pay_amt as "pay_amt", pay_dt as "pay_dt", 
		  (CASE WHEN a.status ='0' THEN '입금' WHEN a.pay_cl ='1' THEN '세금계산서 발행' WHEN a.pay_cl ='9' THEN '미납' 
			ELSE '' END) AS "STATUS",
		  a.fr_dt as "fr_dt", a.to_dt as "to_dt", pay_method_nm as "pay_method_nm", 
		  (CASE WHEN a.del_cl ='1' THEN '삭제' WHEN a.del_cl ='0' THEN '정상' 
			ELSE '' END) as "del_cl", concat(a.reg_dt, a.reg_tm) as "mtime"	
	  FROM tb_comp_pay a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR# 
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.id = #id:VARCHAR# </isNotEqual>
	  ORDER BY a.id, a.pay_cl
  </select> 
  
   <!-- 변경 이력 조회 제휴사정보  -->
  <select id="getChangeJoinInfoCnt" parameterClass="DataModel" resultClass="int">
    select count(1) as "cnt"
    FROM tb_join_info a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR# 
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.mid = #id:VARCHAR# </isNotEqual>
  </select>
  
   <!-- 변경 이력 조회 제휴사정보  -->
  <select id="getChangeJoinInfo" parameterClass="DataModel" resultClass="DataModel">
     SELECT a.mid as "mid", a.co_no as "co_no", 
		 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0022' AND s.code1 = a.svc_cd) as "svc_cd",
		 (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0023' AND s.code1 = a.svc_prdt_cd) as "svc_prdt_cd", 
		 (CASE WHEN svc_cd ='01' THEN (SELECT s.desc1 FROM tb_code s WHERE s.code_cl ='0002' AND s.code1 = a.fn_cd)     	     		       
		       ELSE a.fn_cd END) AS "fn_cd", fn_no as "fn_no", fr_dt as "fr_dt", to_dt as "to_dt", a.reg_dt as "mtime"
	  FROM tb_join_info a
	  WHERE a.reg_dt BETWEEN #fr_dt:VARCHAR# AND #to_dt:VARCHAR# 
	  <isNotEqual prepend="AND" property="id" compareValue="all"> a.mid = #id:VARCHAR# </isNotEqual>
	  ORDER BY svc_cd
  </select> 


	<select id="getSubMercahntLstCnt" parameterClass="DataModel" resultClass="int">
		select	count(*) as "cnt"
		from tb_sub_merchant a, tb_merchant b
		where a.mid = b.mid
		and b.sub_mer_type ='1'
		<isEqual prepend="AND" property="id_cl" compareValue="1"> a.mid = #id:VARCHAR# </isEqual>
		<isEqual prepend="AND" property="id_cl" compareValue="2"> a.subid = #id:VARCHAR# </isEqual>
  </select>
  

  <select id="getSubMercahntLst" parameterClass="DataModel" resultClass="DataModel">
		select	a.mid as "mid", a.subid as "subid", a.req_dt as "req_dt", a.co_nm as "co_nm", a.co_no as "co_no", a.boss_nm as "boss_nm", 
				a.soc_no as "soc_no", a.corp_no as "corp_no", a.gd_kind as "gd_kind", a.bs_kind as "bs_kind", a.main_goods as "main_goods", a.tel_no as "tel_no",  
				a.post_no as "post_no", a.addr1 as "addr1", a.addr2 as "addr2", a.url as "url", a.memo as "memo", a.status as "status", a.worker as "worker",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='01'),'x') as "card_01",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='02'),'x') as "card_02",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='03'),'x') as "card_03",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='04'),'x') as "card_04",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='06'),'x') as "card_06",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='07'),'x') as "card_07",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='08'),'x') as "card_08",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='12'),'x') as "card_12",
				ifnull((select fn_nm_code1('cardsubmall_status',max(x.status)) from tb_card_submall x where x.co_no = a.co_no and fn_cd ='16'),'x') as "card_16"
		from tb_sub_merchant a, tb_merchant b
		where a.mid = b.mid
		and b.sub_mer_type ='1'
		<isEqual prepend="AND" property="id_cl" compareValue="1"> a.mid = #id:VARCHAR# </isEqual>
		<isEqual prepend="AND" property="id_cl" compareValue="2"> a.subid = #id:VARCHAR# </isEqual>
  </select> 

  <select id="getCardMemeberLimit" parameterClass="DataModel" resultClass="DataModel">
    select a.fn_cd as "fn_cd",
	      fn_nm_code1('card_cd', a.fn_cd) as "fn_nm",
	      a.fn_no as "fn_no",
          a.main_nm as "main_nm",
          ifnull(a.mb_limit,0) as "mb_limit",
          sum(ifnull(a.amt_app,0)) as "amt_app",
          sum(ifnull(a.cnt_app,0)) as "cnt_app",
          a.use_nm as "use_nm",
          case when ifnull(a.mb_limit,0) = 0 then 0
          else truncate((sum(ifnull(a.amt_app,0)) * 100) / ifnull(a.mb_limit,0), 0)
          end as "limit_rate"
   from (
      select fn_cd, fn_no, main_nm, mb_limit, 0 amt_app, 0 cnt_app, use_nm
      from tb_card_member
      where date_format(now(), '%Y%m%d') between fr_dt and to_dt
	  <isNotEqual prepend="AND" property="fnCd" compareValue="all"> fn_cd = #fnCd:VARCHAR# </isNotEqual>
	  <isNotEqual prepend="AND" property="fnNo" compareValue="all"> fn_no = #fnNo:VARCHAR# </isNotEqual>
	  and join_type ='1'
      union all
      SELECT b.fn_cd, b.fn_no, b.main_nm, b.mb_limit, 
             sum(ifnull(a.app_amt,0))+sum(ifnull(a.inst_amt,0)) + sum(ifnull(a.non_inst_amt,0)) 
             - sum(ifnull(a.can_bf_amt,0))-sum(ifnull(a.can_inst_bf_amt,0)) - sum(ifnull(a.can_ninst_bf_amt,0))   
             - sum(ifnull(a.can_af_amt,0))-sum(ifnull(a.can_inst_af_amt,0)) - sum(ifnull(a.can_ninst_af_amt,0)) amt_app,
             sum(ifnull(a.app_cnt,0))+sum(ifnull(a.inst_cnt,0)) + sum(ifnull(a.non_inst_cnt,0)) 
             - sum(ifnull(a.can_bf_cnt,0))-sum(ifnull(a.can_inst_bf_cnt,0)) - sum(ifnull(a.can_ninst_bf_cnt,0))   
             - sum(ifnull(a.can_af_cnt,0))-sum(ifnull(a.can_inst_af_cnt,0)) - sum(ifnull(a.can_ninst_af_cnt,0)) cnt_app,
              b.use_nm
      FROM tb_trans_statistics a , tb_card_member b 
      WHERE a.tr_dt BETWEEN #frDt:VARCHAR# and #toDt:VARCHAR#
      AND a.svc_cd ='01'
      AND date_format(now(), '%Y%m%d') between b.fr_dt and b.to_dt
      AND CONVERT(a.fn_no, UNSIGNED) = CONVERT(b.fn_no, UNSIGNED)
	  and b.join_type ='1'
	  <isNotEqual prepend="AND" property="fnCd" compareValue="all"> b.fn_cd = #fnCd:VARCHAR# </isNotEqual>
	  <isNotEqual prepend="AND" property="fnNo" compareValue="all"> a.fn_no = #fnNo:VARCHAR# </isNotEqual>
      group by b.fn_cd, b.fn_no, b.main_nm, b.mb_limit, b.use_nm
    ) a group by a.fn_cd, a.fn_no, a.main_nm, a.mb_limit, a.use_nm
    order by a.fn_cd, a.fn_no
  </select> 


  <select id="getTbDay" parameterClass="DataModel" resultClass="DataModel">
    select  day as "day", yy as "yy", mm as "mm", dd as "dd", off_cl as "off_cl", memo as "memo"
	from tb_day
	where day BETWEEN #fr_dt:VARCHAR# and #to_dt:VARCHAR#
	order by day asc
  </select> 


   <select id="getNonFeeList" parameterClass="String" resultClass="DataModel">
		select mon_id as "mon_id", fn_fee as "fn_fee", sales_fee as "sales_fee", fr_dt as "fr_dt", to_dt as "to_dt" 
		from tb_ninst_fee 
		where fn_no = #value:VARCHAR#
		and date_format(now(), '%Y%m%d') between fr_dt and to_dt
		order by mon_id
  </select>
  
  <select id="getAccountID" parameterClass="String" resultClass="String">
		select ifnull(max(account_id), ' ')
		from tb_merchant
		where co_no = #value:VARCHAR#
		and use_cl = '0'
  </select>
  
  <select id="getMemo" parameterClass="String" resultClass="DataModel">
		select seq as "seq", id as "id", memo as "memo", worker as "worker", ip as "ip", write_dt as "write_dt", write_tm as "write_tm"
		from tb_memo
		where id = #value:VARCHAR#		
		order by write_dt desc, write_tm desc
  </select>

</sqlMap>